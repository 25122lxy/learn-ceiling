(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{365:function(t,a,n){"use strict";n.r(a);var s=n(1),e=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"rabbitmq-不公平分发-预取值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-不公平分发-预取值"}},[t._v("#")]),t._v(" RabbitMQ-不公平分发&预取值")]),t._v(" "),a("h3",{attrs:{id:"_1-不公平分发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-不公平分发"}},[t._v("#")]),t._v(" 1. 不公平分发")]),t._v(" "),a("p",[t._v("在最开始的时候我们学习到 RabbitMQ 分发消息采用的轮训分发，但是在某种场景下这种策略并不是很好，\n比方说有两个消费者在处理任务，其中有个消费者 1 处理任务的速度非常快，而另外一个消费者 2处理速度却很慢，\n这个时候我们还是采用轮训分发的化就会到这处理速度快的这个消费者很大一部分时间处于空闲状态，\n而处理慢的那个消费者一直在干活，这种分配方式在这种情况下其实就不太好，\n但是 RabbitMQ 并不知道这种情况它依然很公平的进行分发。\n为了避免这种情况，我们可以设置参数 channel.basicQos(1);")]),t._v(" "),a("p",[t._v("在消费者端")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置不公平分发")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" prefetchCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicQos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefetchCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("队列持久化在控制台也能看到\ncentos7:15672->Channels->Prefetch:1")]),t._v(" "),a("p",[t._v("意思就是如果这个任务我还没有处理完或者我还没有应答你，你先别分配给我，我目前只能处理一个任务，\n然后 rabbitmq 就会把该任务分配给没有那么忙的那个空闲消费者，\n当然如果所有的消费者都没有完成手上任务，队列还在不停的添加新任务，\n队列有可能就会遇到队列被撑满的情况，\n这个时候就只能添加新的 worker 或者改变其他存储任务的策略。")]),t._v(" "),a("h3",{attrs:{id:"_2-预取值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-预取值"}},[t._v("#")]),t._v(" 2. 预取值")]),t._v(" "),a("p",[t._v("本身消息的发送就是异步发送的，所以在任何时候，channel 上肯定不止只有一个消息，另外来自消费者的手动确认本质上也是异步的。\n因此这里就存在一个未确认的消息缓冲区，因此希望开发人员能"),a("strong",[t._v("限制此缓冲区的大小，以避免缓冲区里面无限制的未确认消息问题。")]),t._v("\n这个时候就可以通过使用 basic.qos 方法设置“预取计数”值来完成的。\n**该值定义通道上允许的未确认消息的最大数量。**一旦数量达到配置的数量， RabbitMQ 将停止在通道上传递更多消息，\n除非至少有一个未处理的消息被确认，例如，假设在通道上有未确认的消息 5、6、7，8，并且通道的预取计数设置为 4，此时 RabbitMQ 将不会在该通道上再传递任何\n消息，除非至少有一个未应答的消息被 ack。比方说 tag=6 这个消息刚刚被确认 ACK，RabbitMQ 将会感知这个情况到并再发送一条消息。\n消息应答和 QoS 预取值对用户吞吐量有重大影响。通常，增加预取将提高向消费者传递消息的速度。\n"),a("strong",[t._v("虽然自动应答传输消息速率是最佳的，但是，在这种情况下已传递但尚未处理的消息的数量也会增加，\n从而增加了消费者的 RAM 消耗")]),t._v("(随机存取存储器)应该小心使用具有无限预处理的自动确认模式或手动确认模式，\n消费者消费了大量的消息如果没有确认的话，会导致消费者连接节点的内存消耗变大，\n所以找到合适的预取值是一个反复试验的过程，不同的负载该值取值也不同 100 到 300 范围内的值通常可提供最佳的吞吐量，\n并且不会给消费者带来太大的风险。预取值为 1 是最保守的。当然这将使吞吐量变得很低，\n特别是消费者连接延迟很严重的情况下，特别是在消费者连接等待时间较长的环境中。对于大多数应用来说，稍微高一点的值将是最佳的。")]),t._v(" "),a("p",[t._v("消费端")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置不公平分发")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//        int prefetchCount = 1;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" prefetchCount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//预期值是5")]),t._v("\n        channel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("basicQos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prefetchCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);