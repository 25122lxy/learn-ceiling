/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "learning-ceiling",
  "description": "learning-ceiling",
  "base": "/learn-ceiling/",
  "headTags": [],
  "pages": [
    {
      "title": "Java基础",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/01-Java%E5%9F%BA%E7%A1%80.html",
      "relativePath": "handbook/Interview/01-Java基础.md",
      "key": "v-5f217005",
      "path": "/handbook/Interview/01-Java%E5%9F%BA%E7%A1%80.html",
      "headers": [
        {
          "level": 2,
          "title": "Java概述",
          "slug": "java概述"
        },
        {
          "level": 3,
          "title": "1.Java语言有哪些特点？",
          "slug": "_1-java语言有哪些特点"
        },
        {
          "level": 3,
          "title": "2.Java和C++有什么关系，它们有什么区别？",
          "slug": "_2-java和c-有什么关系-它们有什么区别"
        },
        {
          "level": 3,
          "title": "3.JVM、JRE和JDK的关系是什么？✔",
          "slug": "_3-jvm、jre和jdk的关系是什么-✔"
        },
        {
          "level": 3,
          "title": "4.什么是字节码？采用字节码的好处是什么？✔",
          "slug": "_4-什么是字节码-采用字节码的好处是什么-✔"
        },
        {
          "level": 3,
          "title": "5.OracleJDK和OpenJDK的区别是什么？",
          "slug": "_5-oraclejdk和openjdk的区别是什么"
        },
        {
          "level": 2,
          "title": "基础语法",
          "slug": "基础语法"
        },
        {
          "level": 3,
          "title": "6.Java有哪些数据类型？✔",
          "slug": "_6-java有哪些数据类型-✔"
        },
        {
          "level": 3,
          "title": "7.Switch是否能作用在byte上，是否能作用在long上，是否能作用在String上？",
          "slug": "_7-switch是否能作用在byte上-是否能作用在long上-是否能作用在string上"
        },
        {
          "level": 3,
          "title": "8.访问修饰符public、private、protected、以及不写（默认）时的区别？",
          "slug": "_8-访问修饰符public、private、protected、以及不写-默认-时的区别"
        },
        {
          "level": 3,
          "title": "9.break，continue，return的区别及作用？✔",
          "slug": "_9-break-continue-return的区别及作用-✔"
        },
        {
          "level": 3,
          "title": "10.final、finally、finalize的区别？✔",
          "slug": "_10-final、finally、finalize的区别-✔"
        },
        {
          "level": 2,
          "title": "关键字",
          "slug": "关键字"
        },
        {
          "level": 3,
          "title": "11.为什么要用static关键字？",
          "slug": "_11-为什么要用static关键字"
        },
        {
          "level": 3,
          "title": "12.\"static\"关键字是什么意思？Java中是否可以覆盖（override）一个private或者是static的方法？",
          "slug": "_12-static-关键字是什么意思-java中是否可以覆盖-override-一个private或者是static的方法"
        },
        {
          "level": 3,
          "title": "13.是否可以在static环境中访问非static变量？",
          "slug": "_13-是否可以在static环境中访问非static变量"
        },
        {
          "level": 3,
          "title": "14.static静态方法能不能引用非静态资源？",
          "slug": "_14-static静态方法能不能引用非静态资源"
        },
        {
          "level": 3,
          "title": "15.static静态方法里面能不能引用静态资源？",
          "slug": "_15-static静态方法里面能不能引用静态资源"
        },
        {
          "level": 3,
          "title": "16.非静态方法里面能不能引用静态资源？",
          "slug": "_16-非静态方法里面能不能引用静态资源"
        },
        {
          "level": 3,
          "title": "17.Static静态代码块、构造代码块、普通代码块、构造函数的执行顺序是什么？",
          "slug": "_17-static静态代码块、构造代码块、普通代码块、构造函数的执行顺序是什么"
        },
        {
          "level": 2,
          "title": "面向对象",
          "slug": "面向对象"
        },
        {
          "level": 3,
          "title": "18.面向对象和面向过程的区别？✔",
          "slug": "_18-面向对象和面向过程的区别-✔"
        },
        {
          "level": 3,
          "title": "19.讲讲面向对象三大特征✔",
          "slug": "_19-讲讲面向对象三大特征✔"
        },
        {
          "level": 3,
          "title": "20.Java语言是如何实现多态的？",
          "slug": "_20-java语言是如何实现多态的"
        },
        {
          "level": 3,
          "title": "21.重载（Overload）和重写（Override）的区别是什么✔",
          "slug": "_21-重载-overload-和重写-override-的区别是什么✔"
        },
        {
          "level": 3,
          "title": "22.重载的方法能否根据返回值类型进行区分？",
          "slug": "_22-重载的方法能否根据返回值类型进行区分"
        },
        {
          "level": 3,
          "title": "23.构造器（constructor）是否可被重写（override）？",
          "slug": "_23-构造器-constructor-是否可被重写-override"
        },
        {
          "level": 3,
          "title": "24.抽象类和接口的区别是什么✔",
          "slug": "_24-抽象类和接口的区别是什么✔"
        },
        {
          "level": 3,
          "title": "25.抽象类能使用final修饰吗？",
          "slug": "_25-抽象类能使用final修饰吗"
        },
        {
          "level": 3,
          "title": "26.java创建对象有哪几种方式？",
          "slug": "_26-java创建对象有哪几种方式"
        },
        {
          "level": 3,
          "title": "27.什么是不可变对象?好处是什么?",
          "slug": "_27-什么是不可变对象-好处是什么"
        },
        {
          "level": 3,
          "title": "28.值传递和引用传递的区别的什么？为什么说Java中只有值传递✔",
          "slug": "_28-值传递和引用传递的区别的什么-为什么说java中只有值传递✔"
        },
        {
          "level": 3,
          "title": "29.能否创建一个包含可变对象的不可变对象?",
          "slug": "_29-能否创建一个包含可变对象的不可变对象"
        },
        {
          "level": 2,
          "title": "对象相等判断",
          "slug": "对象相等判断"
        },
        {
          "level": 3,
          "title": "30.==和equals区别是什么✔",
          "slug": "_30-和equals区别是什么✔"
        },
        {
          "level": 3,
          "title": "31.介绍下hashCode()？",
          "slug": "_31-介绍下hashcode"
        },
        {
          "level": 3,
          "title": "32.为什么要有hashCode?",
          "slug": "_32-为什么要有hashcode"
        },
        {
          "level": 3,
          "title": "33.hashCode(),equals()两种方法是什么关系✔",
          "slug": "_33-hashcode-equals-两种方法是什么关系✔"
        },
        {
          "level": 3,
          "title": "34.为什么重写equals方法必须重写hashcode方法？",
          "slug": "_34-为什么重写equals方法必须重写hashcode方法"
        },
        {
          "level": 2,
          "title": "String相关",
          "slug": "string相关"
        },
        {
          "level": 3,
          "title": "35.String,StringBuffer,StringBuilder的区别是什么✔",
          "slug": "_35-string-stringbuffer-stringbuilder的区别是什么✔"
        },
        {
          "level": 3,
          "title": "36.String为什么要设计成不可变的✔",
          "slug": "_36-string为什么要设计成不可变的✔"
        },
        {
          "level": 3,
          "title": "37.字符型常量和字符串常量的区别？",
          "slug": "_37-字符型常量和字符串常量的区别"
        },
        {
          "level": 3,
          "title": "38.什么是字符串常量池？",
          "slug": "_38-什么是字符串常量池"
        },
        {
          "level": 3,
          "title": "39.String str=\"aaa\"与String str=new String(\"aaa\")一样吗？new String(“aaa”);创建了几个字符串对象?",
          "slug": "_39-string-str-aaa-与string-str-new-string-aaa-一样吗-new-string-aaa-创建了几个字符串对象"
        },
        {
          "level": 3,
          "title": "40.String是最基本的数据类型吗?",
          "slug": "_40-string是最基本的数据类型吗"
        },
        {
          "level": 3,
          "title": "41.String有哪些特性?",
          "slug": "_41-string有哪些特性"
        },
        {
          "level": 3,
          "title": "42. 在使用 HashMap 的时候，用 String 做 key 有什么好处？",
          "slug": "_42-在使用-hashmap-的时候-用-string-做-key-有什么好处"
        },
        {
          "level": 2,
          "title": "包装类型",
          "slug": "包装类型"
        },
        {
          "level": 3,
          "title": "43. 包装类型是什么？基本类型和包装类型有什么区别？",
          "slug": "_43-包装类型是什么-基本类型和包装类型有什么区别"
        },
        {
          "level": 3,
          "title": "44. 解释一下自动装箱和自动拆箱？✔",
          "slug": "_44-解释一下自动装箱和自动拆箱-✔"
        },
        {
          "level": 3,
          "title": "45. int 和 Integer 有什么区别?",
          "slug": "_45-int-和-integer-有什么区别"
        },
        {
          "level": 3,
          "title": "46. 两个new生成的Integer变量的对比",
          "slug": "_46-两个new生成的integer变量的对比"
        },
        {
          "level": 3,
          "title": "47. Integer变量和int变量的对比",
          "slug": "_47-integer变量和int变量的对比"
        },
        {
          "level": 3,
          "title": "48. 非new生成的Integer变量和new Integer()生成变量 的对比",
          "slug": "_48-非new生成的integer变量和new-integer-生成变量-的对比"
        },
        {
          "level": 3,
          "title": "49. 两个非new生成的Integer对象的对比",
          "slug": "_49-两个非new生成的integer对象的对比"
        },
        {
          "level": 2,
          "title": "反射",
          "slug": "反射"
        },
        {
          "level": 3,
          "title": "50. 什么是反射✔",
          "slug": "_50-什么是反射✔"
        },
        {
          "level": 3,
          "title": "51.反射机制的优缺点有哪些？",
          "slug": "_51-反射机制的优缺点有哪些"
        },
        {
          "level": 3,
          "title": "52. 如何获取反射中的Class对象？",
          "slug": "_52-如何获取反射中的class对象"
        },
        {
          "level": 3,
          "title": "53. Java反射API有几类？",
          "slug": "_53-java反射api有几类"
        },
        {
          "level": 3,
          "title": "54. 反射使用的步骤",
          "slug": "_54-反射使用的步骤"
        },
        {
          "level": 3,
          "title": "55. 为什么引入反射概念？反射机制的应用有哪些？",
          "slug": "_55-为什么引入反射概念-反射机制的应用有哪些"
        },
        {
          "level": 3,
          "title": "56. 反射机制的原理是什么？",
          "slug": "_56-反射机制的原理是什么"
        },
        {
          "level": 2,
          "title": "泛型",
          "slug": "泛型"
        },
        {
          "level": 3,
          "title": "57. Java中的泛型是什么 ?",
          "slug": "_57-java中的泛型是什么"
        },
        {
          "level": 3,
          "title": "58. 使用泛型的好处是什么?",
          "slug": "_58-使用泛型的好处是什么"
        },
        {
          "level": 3,
          "title": "59.Java泛型的原理是什么 ? 什么是类型擦除 ?",
          "slug": "_59-java泛型的原理是什么-什么是类型擦除"
        },
        {
          "level": 3,
          "title": "60. 什么是泛型中的限定通配符和非限定通配符 ?",
          "slug": "_60-什么是泛型中的限定通配符和非限定通配符"
        },
        {
          "level": 3,
          "title": "61.List 之间有什么区别 ✔",
          "slug": "_61-list-extends-t-和list-supere-t-之间有什么区别-✔"
        },
        {
          "level": 3,
          "title": "62.可以把 List<String>传递给一个接受 List<Object>参数的方法吗？(见上面说明)",
          "slug": "_62-可以把-list-string-传递给一个接受list-object-参数的方法吗-见上面说明"
        },
        {
          "level": 3,
          "title": "63.判断ArrayList<String>与ArrayList<Integer>是否相等✔",
          "slug": "_63-判断arraylist-string-与arraylist-integer-是否相等✔"
        },
        {
          "level": 2,
          "title": "序列化",
          "slug": "序列化"
        },
        {
          "level": 3,
          "title": "64.Java序列化与反序列化是什么✔",
          "slug": "_64-java序列化与反序列化是什么✔"
        },
        {
          "level": 3,
          "title": "65.为什么需要序列化与反序列化？",
          "slug": "_65-为什么需要序列化与反序列化"
        },
        {
          "level": 3,
          "title": "66.序列化实现的方式有哪些？",
          "slug": "_66-序列化实现的方式有哪些"
        },
        {
          "level": 3,
          "title": "67.什么是serialVersionUID？",
          "slug": "_67-什么是serialversionuid"
        },
        {
          "level": 3,
          "title": "68.为什么还要显示指定serialVersionUID的值✔",
          "slug": "_68-为什么还要显示指定serialversionuid的值✔"
        },
        {
          "level": 3,
          "title": "69.serialVersionUID什么时候修改？",
          "slug": "_69-serialversionuid什么时候修改"
        },
        {
          "level": 3,
          "title": "70.Java序列化中如果有些字段不想进行序列化，怎么办？",
          "slug": "_70-java序列化中如果有些字段不想进行序列化-怎么办"
        },
        {
          "level": 3,
          "title": "71. 静态变量会被序列化吗?",
          "slug": "_71-静态变量会被序列化吗"
        },
        {
          "level": 2,
          "title": "异常",
          "slug": "异常"
        },
        {
          "level": 3,
          "title": "72. Error 和 Exception 区别是什么✔",
          "slug": "_72-error-和-exception-区别是什么✔"
        },
        {
          "level": 3,
          "title": "73. 非受检查异常(运行时异常)和受检查异常(一般异常)区别是什么✔",
          "slug": "_73-非受检查异常-运行时异常-和受检查异常-一般异常-区别是什么✔"
        },
        {
          "level": 3,
          "title": "74. throw 和 throws 的区别是什么✔",
          "slug": "_74-throw-和-throws-的区别是什么✔"
        },
        {
          "level": 3,
          "title": "75. NoClassDefFoundError 和 ClassNotFoundException 区别？",
          "slug": "_75-noclassdeffounderror-和-classnotfoundexception-区别"
        },
        {
          "level": 3,
          "title": "76. Java常见异常有哪些？",
          "slug": "_76-java常见异常有哪些"
        },
        {
          "level": 3,
          "title": "77. try-catch-finally 中哪个部分可以省略？",
          "slug": "_77-try-catch-finally-中哪个部分可以省略"
        },
        {
          "level": 3,
          "title": "78. try-catch-finally 中，如果 catch 中 return 了， finally 还会执行吗？",
          "slug": "_78-try-catch-finally-中-如果-catch-中-return-了-finally-还会执行吗"
        },
        {
          "level": 3,
          "title": "79. JVM 是如何处理异常的？",
          "slug": "_79-jvm-是如何处理异常的"
        },
        {
          "level": 2,
          "title": "IO",
          "slug": "io"
        },
        {
          "level": 3,
          "title": "80. Java的IO 流分为几种？",
          "slug": "_80-java的io-流分为几种"
        },
        {
          "level": 3,
          "title": "81. 字节流如何转为字符流？✔",
          "slug": "_81-字节流如何转为字符流-✔"
        },
        {
          "level": 3,
          "title": "82. 字符流与字节流的区别？",
          "slug": "_82-字符流与字节流的区别"
        },
        {
          "level": 3,
          "title": "83. 什么是阻塞IO？什么是非阻塞IO？",
          "slug": "_83-什么是阻塞io-什么是非阻塞io"
        },
        {
          "level": 3,
          "title": "同步，异步 和 阻塞，非阻塞之间的区别✔",
          "slug": "同步-异步-和-阻塞-非阻塞之间的区别✔"
        },
        {
          "level": 3,
          "title": "84. BIO、NIO、AIO的区别？",
          "slug": "_84-bio、nio、aio的区别"
        },
        {
          "level": 3,
          "title": "85. Java IO都有哪些设计模式？",
          "slug": "_85-java-io都有哪些设计模式"
        },
        {
          "level": 2,
          "title": "补充",
          "slug": "补充"
        },
        {
          "level": 3,
          "title": "86.深拷贝和浅拷贝✔",
          "slug": "_86-深拷贝和浅拷贝✔"
        },
        {
          "level": 3,
          "title": "87.在java的异常处理机制中，什么时候应该抛出异常，什么时候捕获异常？✔",
          "slug": "_87-在java的异常处理机制中-什么时候应该抛出异常-什么时候捕获异常-✔"
        },
        {
          "level": 3,
          "title": "88.面向对象",
          "slug": "_88-面向对象"
        },
        {
          "level": 3,
          "title": "89.为啥有时会出现 4.0 - 3.6 = 0.40000001 这种现象？",
          "slug": "_89-为啥有时会出现-4-0-3-6-0-40000001-这种现象"
        }
      ],
      "size": "14.90kb"
    },
    {
      "title": "MySQL",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/03-MySQL.html",
      "relativePath": "handbook/Interview/03-MySQL.md",
      "key": "v-06ce8e29",
      "path": "/handbook/Interview/03-MySQL.html",
      "headers": [
        {
          "level": 2,
          "title": "索引",
          "slug": "索引"
        },
        {
          "level": 3,
          "title": "1.索引是什么？（无过滤不索引）✔",
          "slug": "_1-索引是什么-无过滤不索引-✔"
        },
        {
          "level": 3,
          "title": "2.索引有哪些优缺点？✔",
          "slug": "_2-索引有哪些优缺点-✔"
        },
        {
          "level": 3,
          "title": "3.MySQL有哪几种索引类型？✔",
          "slug": "_3-mysql有哪几种索引类型-✔"
        },
        {
          "level": 3,
          "title": "4.说一说索引的底层实现?✔",
          "slug": "_4-说一说索引的底层实现-✔"
        },
        {
          "level": 3,
          "title": "5.为什么索引结构默认使用B+Tree，而不是B-Tree，Hash，二叉树，红黑树✔",
          "slug": "_5-为什么索引结构默认使用b-tree-而不是b-tree-hash-二叉树-红黑树✔"
        },
        {
          "level": 3,
          "title": "6.讲一讲聚簇索引（聚集索引）与非聚簇索引（二级索引）？✔",
          "slug": "_6-讲一讲聚簇索引-聚集索引-与非聚簇索引-二级索引-✔"
        },
        {
          "level": 3,
          "title": "什么是回表✔",
          "slug": "什么是回表✔"
        },
        {
          "level": 3,
          "title": "什么是覆盖索引✔",
          "slug": "什么是覆盖索引✔"
        },
        {
          "level": 3,
          "title": "7.非聚簇索引一定会一定会回表查询吗？",
          "slug": "_7-非聚簇索引一定会一定会回表查询吗"
        },
        {
          "level": 3,
          "title": "8.联合索引是什么？为什么需要注意联合索引中的顺序？",
          "slug": "_8-联合索引是什么-为什么需要注意联合索引中的顺序"
        },
        {
          "level": 3,
          "title": "9.讲一讲MySQL的最左前缀原则？✔",
          "slug": "_9-讲一讲mysql的最左前缀原则-✔"
        },
        {
          "level": 3,
          "title": "10.讲一讲前缀索引？",
          "slug": "_10-讲一讲前缀索引"
        },
        {
          "level": 3,
          "title": "11.了解索引下推吗？（减少回表次数）",
          "slug": "_11-了解索引下推吗-减少回表次数"
        },
        {
          "level": 3,
          "title": "12.怎么查看MySQL语句有没有使用到索引？✔",
          "slug": "_12-怎么查看mysql语句有没有使用到索引-✔"
        },
        {
          "level": 3,
          "title": "13.为什么官方建议使用自增长主键作为索引？",
          "slug": "_13-为什么官方建议使用自增长主键作为索引"
        },
        {
          "level": 3,
          "title": "14.如何创建索引？✔",
          "slug": "_14-如何创建索引-✔"
        },
        {
          "level": 3,
          "title": "15.创建索引时需要注意什么？✔",
          "slug": "_15-创建索引时需要注意什么-✔"
        },
        {
          "level": 3,
          "title": "16.建索引的原则有哪些？✔",
          "slug": "_16-建索引的原则有哪些-✔"
        },
        {
          "level": 3,
          "title": "17.使用索引查询一定能提高查询的性能吗？",
          "slug": "_17-使用索引查询一定能提高查询的性能吗"
        },
        {
          "level": 3,
          "title": "18.什么情况下不走索引（索引失效）？✔",
          "slug": "_18-什么情况下不走索引-索引失效-✔"
        },
        {
          "level": 2,
          "title": "基础",
          "slug": "基础"
        },
        {
          "level": 3,
          "title": "19.数据库的三范式是什么？",
          "slug": "_19-数据库的三范式是什么"
        },
        {
          "level": 3,
          "title": "20.MySQL支持哪些存储引擎?✔",
          "slug": "_20-mysql支持哪些存储引擎-✔"
        },
        {
          "level": 3,
          "title": "21.超键、候选键、主键、外键分别是什么？",
          "slug": "_21-超键、候选键、主键、外键分别是什么"
        },
        {
          "level": 3,
          "title": "22.SQL约束有哪几种？✔",
          "slug": "_22-sql约束有哪几种-✔"
        },
        {
          "level": 3,
          "title": "23.MySQL中的varchar和char有什么区别？✔",
          "slug": "_23-mysql中的varchar和char有什么区别-✔"
        },
        {
          "level": 3,
          "title": "24.MySQL中in和exists区别",
          "slug": "_24-mysql中in和exists区别"
        },
        {
          "level": 3,
          "title": "25.drop、delete与truncate的区别✔",
          "slug": "_25-drop、delete与truncate的区别✔"
        },
        {
          "level": 3,
          "title": "26.什么是存储过程？有哪些优缺点？",
          "slug": "_26-什么是存储过程-有哪些优缺点"
        },
        {
          "level": 3,
          "title": "27.MySQL执行查询的过程✔",
          "slug": "_27-mysql执行查询的过程✔"
        },
        {
          "level": 2,
          "title": "事务",
          "slug": "事务"
        },
        {
          "level": 3,
          "title": "28.什么是数据库事务？",
          "slug": "_28-什么是数据库事务"
        },
        {
          "level": 3,
          "title": "29.介绍一下事务具有的四个特征",
          "slug": "_29-介绍一下事务具有的四个特征"
        },
        {
          "level": 3,
          "title": "30.说一下MySQL的四种隔离级别",
          "slug": "_30-说一下mysql的四种隔离级别"
        },
        {
          "level": 3,
          "title": "31.什么是脏读、幻读、不可重复读？",
          "slug": "_31-什么是脏读、幻读、不可重复读"
        },
        {
          "level": 3,
          "title": "32.事务的实现原理",
          "slug": "_32-事务的实现原理"
        },
        {
          "level": 3,
          "title": "33.MySQL事务日志介绍下？",
          "slug": "_33-mysql事务日志介绍下"
        },
        {
          "level": 3,
          "title": "34.什么是MySQL的binlog？",
          "slug": "_34-什么是mysql的binlog"
        },
        {
          "level": 3,
          "title": "35.在事务中可以混合使用存储引擎吗？",
          "slug": "_35-在事务中可以混合使用存储引擎吗"
        },
        {
          "level": 3,
          "title": "36.MySQL中是如何实现事务隔离的？",
          "slug": "_36-mysql中是如何实现事务隔离的"
        },
        {
          "level": 3,
          "title": "37.什么是MVCC？",
          "slug": "_37-什么是mvcc"
        },
        {
          "level": 3,
          "title": "38.MVCC的实现原理？",
          "slug": "_38-mvcc的实现原理"
        },
        {
          "level": 2,
          "title": "锁",
          "slug": "锁"
        },
        {
          "level": 3,
          "title": "39.为什么要加锁？",
          "slug": "_39-为什么要加锁"
        },
        {
          "level": 3,
          "title": "40.按照锁的粒度分数据库锁有哪些？",
          "slug": "_40-按照锁的粒度分数据库锁有哪些"
        },
        {
          "level": 3,
          "title": "41.从锁的类别上分MySQL那些锁呢？",
          "slug": "_41-从锁的类别上分mysql那些锁呢"
        },
        {
          "level": 3,
          "title": "42.数据库的乐观锁和悲观锁是什么？怎么实现的？",
          "slug": "_42-数据库的乐观锁和悲观锁是什么-怎么实现的"
        },
        {
          "level": 3,
          "title": "43.InnoDB引擎的行锁是怎么实现的？",
          "slug": "_43-innodb引擎的行锁是怎么实现的"
        },
        {
          "level": 3,
          "title": "44.什么是死锁？怎么解决？",
          "slug": "_44-什么是死锁-怎么解决"
        },
        {
          "level": 3,
          "title": "45.隔离级别与锁的关系？",
          "slug": "_45-隔离级别与锁的关系"
        },
        {
          "level": 3,
          "title": "46.优化锁的方面的意见？",
          "slug": "_46-优化锁的方面的意见"
        },
        {
          "level": 3,
          "title": "47.为什么要分库分表？",
          "slug": "_47-为什么要分库分表"
        },
        {
          "level": 3,
          "title": "48.用过哪些分库分表中间件？不同的分库分表中间件都有什么优点？",
          "slug": "_48-用过哪些分库分表中间件-不同的分库分表中间件都有什么优点"
        },
        {
          "level": 3,
          "title": "49.如何对数据库进行垂直拆分或水平拆分的？",
          "slug": "_49-如何对数据库进行垂直拆分或水平拆分的"
        },
        {
          "level": 3,
          "title": "50.什么是MySQL主从同步？",
          "slug": "_50-什么是mysql主从同步"
        },
        {
          "level": 3,
          "title": "51.MySQL主从同步的目的？为什么要做主从同步？",
          "slug": "_51-mysql主从同步的目的-为什么要做主从同步"
        },
        {
          "level": 3,
          "title": "52.如何实现MySQL的读写分离？",
          "slug": "_52-如何实现mysql的读写分离"
        },
        {
          "level": 3,
          "title": "53.MySQL主从复制流程和原理？",
          "slug": "_53-mysql主从复制流程和原理"
        },
        {
          "level": 3,
          "title": "54.MySQL主从同步延时问题如何解决？",
          "slug": "_54-mysql主从同步延时问题如何解决"
        },
        {
          "level": 2,
          "title": "优化",
          "slug": "优化"
        },
        {
          "level": 3,
          "title": "55.如何定位及优化SQL语句的性能问题(SQL语句执行很慢, 如何分析)✔",
          "slug": "_55-如何定位及优化sql语句的性能问题-sql语句执行很慢-如何分析-✔"
        },
        {
          "level": 3,
          "title": "56.大数据表查询，怎么优化",
          "slug": "_56-大数据表查询-怎么优化"
        },
        {
          "level": 3,
          "title": "57.超大分页怎么处理?✔",
          "slug": "_57-超大分页怎么处理-✔"
        },
        {
          "level": 3,
          "title": "58.统计过慢查询吗？对慢查询都怎么优化过？✔",
          "slug": "_58-统计过慢查询吗-对慢查询都怎么优化过-✔"
        },
        {
          "level": 3,
          "title": "如何定位慢查询?✔",
          "slug": "如何定位慢查询-✔"
        },
        {
          "level": 3,
          "title": "59.如何优化查询过程中的数据访问",
          "slug": "_59-如何优化查询过程中的数据访问"
        },
        {
          "level": 3,
          "title": "60.如何优化关联查询",
          "slug": "_60-如何优化关联查询"
        },
        {
          "level": 3,
          "title": "61.数据库结构优化",
          "slug": "_61-数据库结构优化"
        },
        {
          "level": 3,
          "title": "62.MySQL数据库CPU飙升到500%的话他怎么处理？",
          "slug": "_62-mysql数据库cpu飙升到500-的话他怎么处理"
        },
        {
          "level": 3,
          "title": "63.大表怎么优化？",
          "slug": "_63-大表怎么优化"
        },
        {
          "level": 3,
          "title": "SQL优化经验✔",
          "slug": "sql优化经验✔"
        }
      ],
      "size": "12.88kb"
    },
    {
      "title": "Redis",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/02-Redis.html",
      "relativePath": "handbook/Interview/02-Redis.md",
      "key": "v-5f9a35ae",
      "path": "/handbook/Interview/02-Redis.html",
      "headers": [
        {
          "level": 2,
          "title": "Redis概述",
          "slug": "redis概述"
        },
        {
          "level": 3,
          "title": "1.Redis是什么？简述它的优缺点？",
          "slug": "_1-redis是什么-简述它的优缺点"
        },
        {
          "level": 3,
          "title": "2.Redis为什么这么快？✔",
          "slug": "_2-redis为什么这么快-✔"
        },
        {
          "level": 3,
          "title": "3.Redis相比Memcached有哪些优势？",
          "slug": "_3-redis相比memcached有哪些优势"
        },
        {
          "level": 3,
          "title": "4.为什么要用redis做缓存？",
          "slug": "_4-为什么要用redis做缓存"
        },
        {
          "level": 3,
          "title": "5.为什么要用redis而不用map/guava做缓存？",
          "slug": "_5-为什么要用redis而不用map-guava做缓存"
        },
        {
          "level": 3,
          "title": "6.Redis的常用场景有哪些？✔",
          "slug": "_6-redis的常用场景有哪些-✔"
        },
        {
          "level": 3,
          "title": "7.Redis的数据类型有哪些？",
          "slug": "_7-redis的数据类型有哪些"
        },
        {
          "level": 2,
          "title": "持久化",
          "slug": "持久化"
        },
        {
          "level": 3,
          "title": "8.Redis持久化机制✔",
          "slug": "_8-redis持久化机制✔"
        },
        {
          "level": 3,
          "title": "9.如何选择合适的持久化方式",
          "slug": "_9-如何选择合适的持久化方式"
        },
        {
          "level": 3,
          "title": "10.Redis持久化数据和缓存怎么做扩容？",
          "slug": "_10-redis持久化数据和缓存怎么做扩容"
        },
        {
          "level": 2,
          "title": "过期键的删除策略、淘汰策略",
          "slug": "过期键的删除策略、淘汰策略"
        },
        {
          "level": 3,
          "title": "11.Redis过期键的删除策略✔",
          "slug": "_11-redis过期键的删除策略✔"
        },
        {
          "level": 3,
          "title": "12.Redis key的过期时间和永久有效分布怎么设置？",
          "slug": "_12-redis-key的过期时间和永久有效分布怎么设置"
        },
        {
          "level": 3,
          "title": "13.Redis内存淘汰策略✔（缓存过多，内存是有限的，内存被占满了怎么办）",
          "slug": "_13-redis内存淘汰策略✔-缓存过多-内存是有限的-内存被占满了怎么办"
        },
        {
          "level": 2,
          "title": "缓存异常",
          "slug": "缓存异常"
        },
        {
          "level": 3,
          "title": "14.如何保证缓存与数据库双写时的数据一致性✔",
          "slug": "_14-如何保证缓存与数据库双写时的数据一致性✔"
        },
        {
          "level": 3,
          "title": "15.先删除缓存，后更新数据库",
          "slug": "_15-先删除缓存-后更新数据库"
        },
        {
          "level": 3,
          "title": "16.先更新数据库，后删除缓存",
          "slug": "_16-先更新数据库-后删除缓存"
        },
        {
          "level": 3,
          "title": "17.什么是缓存击穿✔",
          "slug": "_17-什么是缓存击穿✔"
        },
        {
          "level": 3,
          "title": "18.什么是缓存穿透✔",
          "slug": "_18-什么是缓存穿透✔"
        },
        {
          "level": 3,
          "title": "19.什么是缓存雪崩✔",
          "slug": "_19-什么是缓存雪崩✔"
        },
        {
          "level": 3,
          "title": "20.什么是缓存预热",
          "slug": "_20-什么是缓存预热"
        },
        {
          "level": 3,
          "title": "21.什么是缓存降级",
          "slug": "_21-什么是缓存降级"
        },
        {
          "level": 2,
          "title": "线程模型",
          "slug": "线程模型"
        },
        {
          "level": 3,
          "title": "22.Redis为何选择单线程？",
          "slug": "_22-redis为何选择单线程"
        },
        {
          "level": 3,
          "title": "23.Redis真的是单线程？",
          "slug": "_23-redis真的是单线程"
        },
        {
          "level": 3,
          "title": "24.Redis6.0为何引入多线程？",
          "slug": "_24-redis6-0为何引入多线程"
        },
        {
          "level": 3,
          "title": "25.Redis6.0采用多线程后，性能提升效果如何？",
          "slug": "_25-redis6-0采用多线程后-性能提升效果如何"
        },
        {
          "level": 3,
          "title": "26.介绍下Redis的线程模型",
          "slug": "_26-介绍下redis的线程模型"
        },
        {
          "level": 3,
          "title": "27.Redis 6.0 多线程的实现机制？",
          "slug": "_27-redis-6-0-多线程的实现机制"
        },
        {
          "level": 3,
          "title": "28.Redis6.0开启多线程后，是否会存在线程并发安全问题？",
          "slug": "_28-redis6-0开启多线程后-是否会存在线程并发安全问题"
        },
        {
          "level": 3,
          "title": "29.Redis6.0与Memcached多线程模型的对比",
          "slug": "_29-redis6-0与memcached多线程模型的对比"
        },
        {
          "level": 2,
          "title": "事务",
          "slug": "事务"
        },
        {
          "level": 3,
          "title": "30.Redis事务的概念",
          "slug": "_30-redis事务的概念"
        },
        {
          "level": 3,
          "title": "31.Redis事务的三个阶段",
          "slug": "_31-redis事务的三个阶段"
        },
        {
          "level": 3,
          "title": "32.Redis事务相关命令",
          "slug": "_32-redis事务相关命令"
        },
        {
          "level": 3,
          "title": "33.Redis事务支持隔离性吗？",
          "slug": "_33-redis事务支持隔离性吗"
        },
        {
          "level": 3,
          "title": "34.Redis为什么不支持事务回滚？",
          "slug": "_34-redis为什么不支持事务回滚"
        },
        {
          "level": 3,
          "title": "35.Redis事务其他实现",
          "slug": "_35-redis事务其他实现"
        },
        {
          "level": 2,
          "title": "主从、哨兵、集群",
          "slug": "主从、哨兵、集群"
        },
        {
          "level": 3,
          "title": "36.Redis常见使用方式有哪些？✔",
          "slug": "_36-redis常见使用方式有哪些-✔"
        },
        {
          "level": 3,
          "title": "37.介绍下Redis的单副本",
          "slug": "_37-介绍下redis的单副本"
        },
        {
          "level": 3,
          "title": "38.介绍下Redis多副本（主从）✔",
          "slug": "_38-介绍下redis多副本-主从-✔"
        },
        {
          "level": 3,
          "title": "介绍一下主从同步✔",
          "slug": "介绍一下主从同步✔"
        },
        {
          "level": 3,
          "title": "主从同步数据的流程✔",
          "slug": "主从同步数据的流程✔"
        },
        {
          "level": 3,
          "title": "39.介绍下Redis Sentinel（哨兵） ✔",
          "slug": "_39-介绍下redis-sentinel-哨兵-✔"
        },
        {
          "level": 3,
          "title": "怎么保证Redis的高并发高可用✔",
          "slug": "怎么保证redis的高并发高可用✔"
        },
        {
          "level": 3,
          "title": "使用redis是单点还是集群，哪种集群✔",
          "slug": "使用redis是单点还是集群-哪种集群✔"
        },
        {
          "level": 3,
          "title": "redis集群脑裂，该怎么解决呢？✔",
          "slug": "redis集群脑裂-该怎么解决呢-✔"
        },
        {
          "level": 3,
          "title": "40.介绍下Redis Cluster （分片集群）✔",
          "slug": "_40-介绍下redis-cluster-分片集群-✔"
        },
        {
          "level": 3,
          "title": "redis的分片集群有什么作用✔",
          "slug": "redis的分片集群有什么作用✔"
        },
        {
          "level": 3,
          "title": "Redis分片集群中数据是怎么存储和读取的？✔",
          "slug": "redis分片集群中数据是怎么存储和读取的-✔"
        },
        {
          "level": 3,
          "title": "41.介绍下Redis自研",
          "slug": "_41-介绍下redis自研"
        },
        {
          "level": 3,
          "title": "42.Redis高可用方案具体怎么实施？✔",
          "slug": "_42-redis高可用方案具体怎么实施-✔"
        },
        {
          "level": 3,
          "title": "43.了解主从复制原理吗？✔",
          "slug": "_43-了解主从复制原理吗-✔"
        },
        {
          "level": 3,
          "title": "44.由于主从延迟导致读取到过期数据怎么处理？",
          "slug": "_44-由于主从延迟导致读取到过期数据怎么处理"
        },
        {
          "level": 3,
          "title": "45.主从复制的过程中，如果因为网络原因停止复制了会怎么样？",
          "slug": "_45-主从复制的过程中-如果因为网络原因停止复制了会怎么样"
        },
        {
          "level": 3,
          "title": "46.Redis主从架构数据会丢失吗，为什么？",
          "slug": "_46-redis主从架构数据会丢失吗-为什么"
        },
        {
          "level": 3,
          "title": "47.如何解决主从架构数据丢失的问题？",
          "slug": "_47-如何解决主从架构数据丢失的问题"
        },
        {
          "level": 3,
          "title": "48.Redis哨兵是怎么工作的？",
          "slug": "_48-redis哨兵是怎么工作的"
        },
        {
          "level": 3,
          "title": "49.故障转移时会从剩下的slave选举一个新的master，被选举为master的标准是什么？",
          "slug": "_49-故障转移时会从剩下的slave选举一个新的master-被选举为master的标准是什么"
        },
        {
          "level": 3,
          "title": "50.同步配置的时候其他哨兵根据什么更新自己的配置呢？",
          "slug": "_50-同步配置的时候其他哨兵根据什么更新自己的配置呢"
        },
        {
          "level": 3,
          "title": "51. 为什么Redis哨兵集群只有2个节点无法正常工作？",
          "slug": "_51-为什么redis哨兵集群只有2个节点无法正常工作"
        },
        {
          "level": 3,
          "title": "52.Redis cluster中是如何实现数据分布式的？这种方式有什么优点？",
          "slug": "_52-redis-cluster中是如何实现数据分布式的-这种方式有什么优点"
        },
        {
          "level": 3,
          "title": "53.Redis cluster节点间通信是什么机制？",
          "slug": "_53-redis-cluster节点间通信是什么机制"
        },
        {
          "level": 2,
          "title": "分布式问题",
          "slug": "分布式问题"
        },
        {
          "level": 3,
          "title": "54.什么是分布式锁？为什么用分布式锁？",
          "slug": "_54-什么是分布式锁-为什么用分布式锁"
        },
        {
          "level": 3,
          "title": "55.常见的分布式锁有哪些解决方案？",
          "slug": "_55-常见的分布式锁有哪些解决方案"
        },
        {
          "level": 3,
          "title": "56.Redis实现分布式锁✔",
          "slug": "_56-redis实现分布式锁✔"
        },
        {
          "level": 3,
          "title": "57.了解RedLock吗？",
          "slug": "_57-了解redlock吗"
        },
        {
          "level": 3,
          "title": "58.RedLock的原理？",
          "slug": "_58-redlock的原理"
        },
        {
          "level": 2,
          "title": "其他",
          "slug": "其他"
        },
        {
          "level": 3,
          "title": "59.Redis如何做内存优化？",
          "slug": "_59-redis如何做内存优化"
        },
        {
          "level": 3,
          "title": "60.如果现在有个读超高并发的系统，用Redis来抗住大部分读请求，你会怎么设计？",
          "slug": "_60-如果现在有个读超高并发的系统-用redis来抗住大部分读请求-你会怎么设计"
        }
      ],
      "size": "16.27kb"
    },
    {
      "title": "Hello World",
      "frontmatter": {},
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-4c3d68a8",
      "path": "/",
      "size": "0.38kb"
    }
  ],
  "themeConfig": {
    "sidebarDepth": 3,
    "subSidebar": true,
    "nav": [
      {
        "text": "Index",
        "link": "/"
      },
      {
        "text": "Learn",
        "link": "/handbook/01-Java基础"
      },
      {
        "text": "Interview",
        "items": [
          {
            "text": "Java",
            "link": "/handbook/Interview/01-Java基础"
          },
          {
            "text": "Redis",
            "link": "/handbook/Interview/02-Redis"
          },
          {
            "text": "MySQL",
            "link": "/handbook/Interview/03-MySQL"
          }
        ]
      },
      {
        "text": "Project",
        "link": "/Project"
      },
      {
        "text": "lxy25122-blog",
        "items": [
          {
            "text": "Github",
            "link": "https://github.com/lxy25122"
          },
          {
            "text": "Gitee",
            "link": "https://gitee.com/tjlxy"
          }
        ]
      }
    ],
    "sidebar": [
      {
        "title": "欢迎学习",
        "path": "/",
        "collapsable": false,
        "children": [
          {
            "title": "学前必读",
            "path": "/"
          }
        ]
      },
      {
        "title": "Interview",
        "path": "/handbook/01-Java基础",
        "collapsable": false,
        "children": [
          {
            "title": "Java基础",
            "path": "/handbook/Interview/01-Java基础"
          },
          {
            "title": "Redis",
            "path": "/handbook/Interview/02-Redis"
          },
          {
            "title": "MySQL",
            "path": "/handbook/Interview/03-MySQL"
          }
        ]
      }
    ],
    "yilia_plus": {
      "github": {
        "url": "https://github.com/25122lxy/"
      },
      "footer": {
        "since": 20,
        "author": "<a href=\"https://github.com/25122lxy/\" target=\"_blank\">lxy25122</a>",
        "busuanzi": {
          "enable": false
        }
      }
    }
  },
  "locales": {
    "/": {
      "lang": "zh-CN",
      "path": "/"
    }
  }
}