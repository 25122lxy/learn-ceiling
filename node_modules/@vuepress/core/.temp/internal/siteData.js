/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "Code Diary",
  "description": "技术笔记、编程心得分享",
  "base": "/learn-ceiling/",
  "headTags": [
    [
      "meta",
      {
        "name": "referrer",
        "content": "no-referrer"
      }
    ],
    [
      "link",
      {
        "rel": "icon",
        "href": "/learn-ceiling/hand.jpg"
      }
    ]
  ],
  "pages": [
    {
      "title": "Java基础",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/01-Java%E5%9F%BA%E7%A1%80.html",
      "relativePath": "handbook/Interview/01-Java基础.md",
      "key": "v-5f217005",
      "path": "/handbook/Interview/01-Java%E5%9F%BA%E7%A1%80.html",
      "headers": [
        {
          "level": 2,
          "title": "Java概述",
          "slug": "java概述"
        },
        {
          "level": 3,
          "title": "1.Java语言有哪些特点",
          "slug": "_1-java语言有哪些特点"
        },
        {
          "level": 3,
          "title": "2.Java和C++有什么关系，它们有什么区别",
          "slug": "_2-java和c-有什么关系-它们有什么区别"
        },
        {
          "level": 3,
          "title": "3.JVM、JRE和JDK的关系是什么✔",
          "slug": "_3-jvm、jre和jdk的关系是什么✔"
        },
        {
          "level": 3,
          "title": "4.什么是字节码？采用字节码的好处是什么✔",
          "slug": "_4-什么是字节码-采用字节码的好处是什么✔"
        },
        {
          "level": 3,
          "title": "5.OracleJDK和OpenJDK的区别是什么",
          "slug": "_5-oraclejdk和openjdk的区别是什么"
        },
        {
          "level": 2,
          "title": "基础语法",
          "slug": "基础语法"
        },
        {
          "level": 3,
          "title": "6.Java有哪些数据类型✔",
          "slug": "_6-java有哪些数据类型✔"
        },
        {
          "level": 3,
          "title": "7.Switch是否能作用在byte上，是否能作用在long上，是否能作用在String上",
          "slug": "_7-switch是否能作用在byte上-是否能作用在long上-是否能作用在string上"
        },
        {
          "level": 3,
          "title": "8.访问修饰符public、private、protected、以及不写（默认）时的区别",
          "slug": "_8-访问修饰符public、private、protected、以及不写-默认-时的区别"
        },
        {
          "level": 3,
          "title": "9.break，continue，return的区别及作用✔",
          "slug": "_9-break-continue-return的区别及作用✔"
        },
        {
          "level": 3,
          "title": "10.final、finally、finalize的区别✔",
          "slug": "_10-final、finally、finalize的区别✔"
        },
        {
          "level": 2,
          "title": "关键字",
          "slug": "关键字"
        },
        {
          "level": 3,
          "title": "11.为什么要用static关键字",
          "slug": "_11-为什么要用static关键字"
        },
        {
          "level": 3,
          "title": "12.\"static\"关键字是什么意思？Java中是否可以覆盖（override）一个private或者是static的方法",
          "slug": "_12-static-关键字是什么意思-java中是否可以覆盖-override-一个private或者是static的方法"
        },
        {
          "level": 3,
          "title": "13.是否可以在static环境中访问非static变量",
          "slug": "_13-是否可以在static环境中访问非static变量"
        },
        {
          "level": 3,
          "title": "14.static静态方法能不能引用非静态资源",
          "slug": "_14-static静态方法能不能引用非静态资源"
        },
        {
          "level": 3,
          "title": "15.static静态方法里面能不能引用静态资源",
          "slug": "_15-static静态方法里面能不能引用静态资源"
        },
        {
          "level": 3,
          "title": "16.非静态方法里面能不能引用静态资源",
          "slug": "_16-非静态方法里面能不能引用静态资源"
        },
        {
          "level": 3,
          "title": "17.Static静态代码块、构造代码块、普通代码块、构造函数的执行顺序是什么",
          "slug": "_17-static静态代码块、构造代码块、普通代码块、构造函数的执行顺序是什么"
        },
        {
          "level": 2,
          "title": "面向对象",
          "slug": "面向对象"
        },
        {
          "level": 3,
          "title": "18.面向对象和面向过程的区别✔",
          "slug": "_18-面向对象和面向过程的区别✔"
        },
        {
          "level": 3,
          "title": "19.讲讲面向对象三大特征✔",
          "slug": "_19-讲讲面向对象三大特征✔"
        },
        {
          "level": 3,
          "title": "20.Java语言是如何实现多态的",
          "slug": "_20-java语言是如何实现多态的"
        },
        {
          "level": 3,
          "title": "21.重载（Overload）和重写（Override）的区别是什么✔",
          "slug": "_21-重载-overload-和重写-override-的区别是什么✔"
        },
        {
          "level": 3,
          "title": "22.重载的方法能否根据返回值类型进行区分",
          "slug": "_22-重载的方法能否根据返回值类型进行区分"
        },
        {
          "level": 3,
          "title": "23.构造器（constructor）是否可被重写（override）",
          "slug": "_23-构造器-constructor-是否可被重写-override"
        },
        {
          "level": 3,
          "title": "24.抽象类和接口的区别是什么✔",
          "slug": "_24-抽象类和接口的区别是什么✔"
        },
        {
          "level": 3,
          "title": "25.抽象类能使用final修饰吗",
          "slug": "_25-抽象类能使用final修饰吗"
        },
        {
          "level": 3,
          "title": "26.java创建对象有哪几种方式",
          "slug": "_26-java创建对象有哪几种方式"
        },
        {
          "level": 3,
          "title": "27.什么是不可变对象?好处是什么",
          "slug": "_27-什么是不可变对象-好处是什么"
        },
        {
          "level": 3,
          "title": "28.值传递和引用传递的区别的什么？为什么说Java中只有值传递✔",
          "slug": "_28-值传递和引用传递的区别的什么-为什么说java中只有值传递✔"
        },
        {
          "level": 3,
          "title": "29.能否创建一个包含可变对象的不可变对象",
          "slug": "_29-能否创建一个包含可变对象的不可变对象"
        },
        {
          "level": 2,
          "title": "对象相等判断",
          "slug": "对象相等判断"
        },
        {
          "level": 3,
          "title": "30.==和equals区别是什么✔",
          "slug": "_30-和equals区别是什么✔"
        },
        {
          "level": 3,
          "title": "31.介绍下hashCode()",
          "slug": "_31-介绍下hashcode"
        },
        {
          "level": 3,
          "title": "32.为什么要有hashCode",
          "slug": "_32-为什么要有hashcode"
        },
        {
          "level": 3,
          "title": "33.hashCode(),equals()两种方法是什么关系✔",
          "slug": "_33-hashcode-equals-两种方法是什么关系✔"
        },
        {
          "level": 3,
          "title": "34.为什么重写equals方法必须重写hashcode方法",
          "slug": "_34-为什么重写equals方法必须重写hashcode方法"
        },
        {
          "level": 2,
          "title": "String相关",
          "slug": "string相关"
        },
        {
          "level": 3,
          "title": "35.String,StringBuffer,StringBuilder的区别是什么✔",
          "slug": "_35-string-stringbuffer-stringbuilder的区别是什么✔"
        },
        {
          "level": 3,
          "title": "36.String为什么要设计成不可变的✔",
          "slug": "_36-string为什么要设计成不可变的✔"
        },
        {
          "level": 3,
          "title": "37.字符型常量和字符串常量的区别",
          "slug": "_37-字符型常量和字符串常量的区别"
        },
        {
          "level": 3,
          "title": "38.什么是字符串常量池",
          "slug": "_38-什么是字符串常量池"
        },
        {
          "level": 3,
          "title": "39.String str=\"aaa\"与String str=new String(\"aaa\")一样吗？new String(“aaa”);创建了几个字符串对象",
          "slug": "_39-string-str-aaa-与string-str-new-string-aaa-一样吗-new-string-aaa-创建了几个字符串对象"
        },
        {
          "level": 3,
          "title": "40.String是最基本的数据类型吗",
          "slug": "_40-string是最基本的数据类型吗"
        },
        {
          "level": 3,
          "title": "41.String有哪些特性",
          "slug": "_41-string有哪些特性"
        },
        {
          "level": 3,
          "title": "42. 在使用 HashMap 的时候，用 String 做 key 有什么好处",
          "slug": "_42-在使用-hashmap-的时候-用-string-做-key-有什么好处"
        },
        {
          "level": 2,
          "title": "包装类型",
          "slug": "包装类型"
        },
        {
          "level": 3,
          "title": "43. 包装类型是什么？基本类型和包装类型有什么区别",
          "slug": "_43-包装类型是什么-基本类型和包装类型有什么区别"
        },
        {
          "level": 3,
          "title": "44. 解释一下自动装箱和自动拆箱✔",
          "slug": "_44-解释一下自动装箱和自动拆箱✔"
        },
        {
          "level": 3,
          "title": "45. int 和 Integer 有什么区别✔",
          "slug": "_45-int-和-integer-有什么区别✔"
        },
        {
          "level": 3,
          "title": "46. 两个new生成的Integer变量的对比",
          "slug": "_46-两个new生成的integer变量的对比"
        },
        {
          "level": 3,
          "title": "47. Integer变量和int变量的对比",
          "slug": "_47-integer变量和int变量的对比"
        },
        {
          "level": 3,
          "title": "48. 非new生成的Integer变量和new Integer()生成变量的对比",
          "slug": "_48-非new生成的integer变量和new-integer-生成变量的对比"
        },
        {
          "level": 3,
          "title": "49. 两个非new生成的Integer对象的对比",
          "slug": "_49-两个非new生成的integer对象的对比"
        },
        {
          "level": 2,
          "title": "反射",
          "slug": "反射"
        },
        {
          "level": 3,
          "title": "50. 什么是反射✔",
          "slug": "_50-什么是反射✔"
        },
        {
          "level": 3,
          "title": "51.反射机制的优缺点有哪些",
          "slug": "_51-反射机制的优缺点有哪些"
        },
        {
          "level": 3,
          "title": "52. 如何获取反射中的Class对象",
          "slug": "_52-如何获取反射中的class对象"
        },
        {
          "level": 3,
          "title": "53. Java反射API有几类",
          "slug": "_53-java反射api有几类"
        },
        {
          "level": 3,
          "title": "54. 反射使用的步骤",
          "slug": "_54-反射使用的步骤"
        },
        {
          "level": 3,
          "title": "55. 为什么引入反射概念？反射机制的应用有哪些",
          "slug": "_55-为什么引入反射概念-反射机制的应用有哪些"
        },
        {
          "level": 3,
          "title": "56. 反射机制的原理是什么",
          "slug": "_56-反射机制的原理是什么"
        },
        {
          "level": 2,
          "title": "泛型",
          "slug": "泛型"
        },
        {
          "level": 3,
          "title": "57. Java中的泛型是什么",
          "slug": "_57-java中的泛型是什么"
        },
        {
          "level": 3,
          "title": "58. 使用泛型的好处是什么",
          "slug": "_58-使用泛型的好处是什么"
        },
        {
          "level": 3,
          "title": "59.Java泛型的原理是什么 ? 什么是类型擦除",
          "slug": "_59-java泛型的原理是什么-什么是类型擦除"
        },
        {
          "level": 3,
          "title": "60. 什么是泛型中的限定通配符和非限定通配符",
          "slug": "_60-什么是泛型中的限定通配符和非限定通配符"
        },
        {
          "level": 3,
          "title": "61.List 之间有什么区别 ✔",
          "slug": "_61-list-extends-t-和list-supere-t-之间有什么区别-✔"
        },
        {
          "level": 3,
          "title": "62.可以把 List<String>传递给一个接受 List<Object>参数的方法吗(见上面说明)",
          "slug": "_62-可以把-list-string-传递给一个接受list-object-参数的方法吗-见上面说明"
        },
        {
          "level": 3,
          "title": "63.判断ArrayList<String>与ArrayList<Integer>是否相等✔",
          "slug": "_63-判断arraylist-string-与arraylist-integer-是否相等✔"
        },
        {
          "level": 2,
          "title": "序列化",
          "slug": "序列化"
        },
        {
          "level": 3,
          "title": "64.Java序列化与反序列化是什么✔",
          "slug": "_64-java序列化与反序列化是什么✔"
        },
        {
          "level": 3,
          "title": "65.为什么需要序列化与反序列化",
          "slug": "_65-为什么需要序列化与反序列化"
        },
        {
          "level": 3,
          "title": "66.序列化实现的方式有哪些",
          "slug": "_66-序列化实现的方式有哪些"
        },
        {
          "level": 3,
          "title": "实现序列化和反序列化为什么要实现Serializable接口✔",
          "slug": "实现序列化和反序列化为什么要实现serializable接口✔"
        },
        {
          "level": 3,
          "title": "67.什么是serialVersionUID",
          "slug": "_67-什么是serialversionuid"
        },
        {
          "level": 3,
          "title": "68.为什么还要显示指定serialVersionUID的值✔",
          "slug": "_68-为什么还要显示指定serialversionuid的值✔"
        },
        {
          "level": 3,
          "title": "69.serialVersionUID什么时候修改",
          "slug": "_69-serialversionuid什么时候修改"
        },
        {
          "level": 3,
          "title": "70.Java序列化中如果有些字段不想进行序列化，怎么办",
          "slug": "_70-java序列化中如果有些字段不想进行序列化-怎么办"
        },
        {
          "level": 3,
          "title": "71. 静态变量会被序列化吗",
          "slug": "_71-静态变量会被序列化吗"
        },
        {
          "level": 2,
          "title": "异常",
          "slug": "异常"
        },
        {
          "level": 3,
          "title": "72. Error 和 Exception 区别是什么✔",
          "slug": "_72-error-和-exception-区别是什么✔"
        },
        {
          "level": 3,
          "title": "73. 非受检查异常(运行时异常)和受检查异常(一般异常)区别是什么✔",
          "slug": "_73-非受检查异常-运行时异常-和受检查异常-一般异常-区别是什么✔"
        },
        {
          "level": 3,
          "title": "74. throw 和 throws 的区别是什么✔",
          "slug": "_74-throw-和-throws-的区别是什么✔"
        },
        {
          "level": 3,
          "title": "75. NoClassDefFoundError 和 ClassNotFoundException 区别✔",
          "slug": "_75-noclassdeffounderror-和-classnotfoundexception-区别✔"
        },
        {
          "level": 3,
          "title": "76. Java常见异常有哪些",
          "slug": "_76-java常见异常有哪些"
        },
        {
          "level": 3,
          "title": "77. try-catch-finally 中哪个部分可以省略",
          "slug": "_77-try-catch-finally-中哪个部分可以省略"
        },
        {
          "level": 3,
          "title": "78. try-catch-finally 中，如果 catch 中 return 了， finally 还会执行吗",
          "slug": "_78-try-catch-finally-中-如果-catch-中-return-了-finally-还会执行吗"
        },
        {
          "level": 3,
          "title": "79. JVM 是如何处理异常的",
          "slug": "_79-jvm-是如何处理异常的"
        },
        {
          "level": 3,
          "title": "异常代码分析",
          "slug": "异常代码分析"
        },
        {
          "level": 2,
          "title": "IO",
          "slug": "io"
        },
        {
          "level": 3,
          "title": "80. Java的IO 流分为几种",
          "slug": "_80-java的io-流分为几种"
        },
        {
          "level": 3,
          "title": "81. 字节流如何转为字符流✔",
          "slug": "_81-字节流如何转为字符流✔"
        },
        {
          "level": 3,
          "title": "82. 字符流与字节流的区别",
          "slug": "_82-字符流与字节流的区别"
        },
        {
          "level": 3,
          "title": "83. 什么是阻塞IO？什么是非阻塞IO",
          "slug": "_83-什么是阻塞io-什么是非阻塞io"
        },
        {
          "level": 3,
          "title": "同步，异步 和 阻塞，非阻塞之间的区别✔",
          "slug": "同步-异步-和-阻塞-非阻塞之间的区别✔"
        },
        {
          "level": 3,
          "title": "84. BIO、NIO、AIO的区别",
          "slug": "_84-bio、nio、aio的区别"
        },
        {
          "level": 3,
          "title": "85. Java IO都有哪些设计模式",
          "slug": "_85-java-io都有哪些设计模式"
        },
        {
          "level": 2,
          "title": "补充",
          "slug": "补充"
        },
        {
          "level": 3,
          "title": "86.深拷贝和浅拷贝✔",
          "slug": "_86-深拷贝和浅拷贝✔"
        },
        {
          "level": 3,
          "title": "87.在java的异常处理机制中，什么时候应该抛出异常，什么时候捕获异常✔",
          "slug": "_87-在java的异常处理机制中-什么时候应该抛出异常-什么时候捕获异常✔"
        },
        {
          "level": 3,
          "title": "88.面向对象",
          "slug": "_88-面向对象"
        },
        {
          "level": 3,
          "title": "89.为啥有时会出现 4.0 - 3.6 = 0.40000001 这种现象",
          "slug": "_89-为啥有时会出现-4-0-3-6-0-40000001-这种现象"
        },
        {
          "level": 3,
          "title": "常见的HTTP状态码：",
          "slug": "常见的http状态码"
        },
        {
          "level": 3,
          "title": "其他前沿技术",
          "slug": "其他前沿技术"
        }
      ],
      "size": "19.51kb"
    },
    {
      "title": "Java框架",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/04-Java%E6%A1%86%E6%9E%B6.html",
      "relativePath": "handbook/Interview/04-Java框架.md",
      "key": "v-7e7e4a1f",
      "path": "/handbook/Interview/04-Java%E6%A1%86%E6%9E%B6.html",
      "headers": [
        {
          "level": 2,
          "title": "Spring",
          "slug": "spring"
        },
        {
          "level": 3,
          "title": "1.使用Spring框架的好处是什么（为什么要用Spring框架）✔",
          "slug": "_1-使用spring框架的好处是什么-为什么要用spring框架-✔"
        },
        {
          "level": 3,
          "title": "2.什么是SpringIOC容器✔",
          "slug": "_2-什么是springioc容器✔"
        },
        {
          "level": 3,
          "title": "3.什么是依赖注入？可以通过多少种方式完成注入✔",
          "slug": "_3-什么是依赖注入-可以通过多少种方式完成注入✔"
        },
        {
          "level": 3,
          "title": "4.区分BeanFactory和ApplicationContext✔",
          "slug": "_4-区分beanfactory和applicationcontext✔"
        },
        {
          "level": 3,
          "title": "5.区分构造函数注入和setter注入",
          "slug": "_5-区分构造函数注入和setter注入"
        },
        {
          "level": 3,
          "title": "6.Spring提供了那些配置方式",
          "slug": "_6-spring提供了那些配置方式"
        },
        {
          "level": 3,
          "title": "7.Spring中的bean的作用域有哪些✔",
          "slug": "_7-spring中的bean的作用域有哪些✔"
        },
        {
          "level": 3,
          "title": "8.如何理解IOC和DI",
          "slug": "_8-如何理解ioc和di"
        },
        {
          "level": 3,
          "title": "9.将一个类声明为Spring的bean的注解有哪些",
          "slug": "_9-将一个类声明为spring的bean的注解有哪些"
        },
        {
          "level": 3,
          "title": "10.Spring支持几种beanscope",
          "slug": "_10-spring支持几种beanscope"
        },
        {
          "level": 3,
          "title": "11.Spring中的bean生命周期✔",
          "slug": "_11-spring中的bean生命周期✔"
        },
        {
          "level": 3,
          "title": "12.什么是Spring的内部bean",
          "slug": "_12-什么是spring的内部bean"
        },
        {
          "level": 3,
          "title": "13.什么是Spring装配✔",
          "slug": "_13-什么是spring装配✔"
        },
        {
          "level": 3,
          "title": "14.自动装配有什么局限",
          "slug": "_14-自动装配有什么局限"
        },
        {
          "level": 3,
          "title": "15.Spring中出现同名bean怎么办",
          "slug": "_15-spring中出现同名bean怎么办"
        },
        {
          "level": 3,
          "title": "16.Spring怎么解决循环依赖问题✔",
          "slug": "_16-spring怎么解决循环依赖问题✔"
        },
        {
          "level": 3,
          "title": "Spring中的循环引用✔",
          "slug": "spring中的循环引用✔"
        },
        {
          "level": 3,
          "title": "循环依赖具体解决流程✔",
          "slug": "循环依赖具体解决流程✔"
        },
        {
          "level": 3,
          "title": "构造方法出现了循环依赖怎么解决✔",
          "slug": "构造方法出现了循环依赖怎么解决✔"
        },
        {
          "level": 3,
          "title": "17.Spring中的单例bean的线程安全问题✔",
          "slug": "_17-spring中的单例bean的线程安全问题✔"
        },
        {
          "level": 3,
          "title": "18.什么是AOP✔",
          "slug": "_18-什么是aop✔"
        },
        {
          "level": 3,
          "title": "AOP的使用情景有哪些?简述其实现原理",
          "slug": "aop的使用情景有哪些-简述其实现原理"
        },
        {
          "level": 3,
          "title": "你们项目中有没有使用到AOP",
          "slug": "你们项目中有没有使用到aop"
        },
        {
          "level": 3,
          "title": "19.Aop有哪些实现方式",
          "slug": "_19-aop有哪些实现方式"
        },
        {
          "level": 3,
          "title": "20.Spring Aop and AspectJ Aop有什么区别",
          "slug": "_20-spring-aop-and-aspectj-aop有什么区别"
        },
        {
          "level": 3,
          "title": "21.Spring框架中用到了那些设计模式✔",
          "slug": "_21-spring框架中用到了那些设计模式✔"
        },
        {
          "level": 3,
          "title": "22.Spring事务实现方式有哪些（如何实现）✔",
          "slug": "_22-spring事务实现方式有哪些-如何实现-✔"
        },
        {
          "level": 3,
          "title": "23.Spring框架的事务管理有哪些优点",
          "slug": "_23-spring框架的事务管理有哪些优点"
        },
        {
          "level": 3,
          "title": "24.Spring事务定义的传播规则✔",
          "slug": "_24-spring事务定义的传播规则✔"
        },
        {
          "level": 3,
          "title": "25.SpringMVC工作原理了解吗✔",
          "slug": "_25-springmvc工作原理了解吗✔"
        },
        {
          "level": 3,
          "title": "26.简单介绍SpringMVC的核心组件✔",
          "slug": "_26-简单介绍springmvc的核心组件✔"
        },
        {
          "level": 3,
          "title": "27.@Controller注解有什么用",
          "slug": "_27-controller注解有什么用"
        },
        {
          "level": 3,
          "title": "28.@RequestMapping注解有什么用",
          "slug": "_28-requestmapping注解有什么用"
        },
        {
          "level": 3,
          "title": "29.@RestController 和 @Controller 有什么区别",
          "slug": "_29-restcontroller-和-controller-有什么区别"
        },
        {
          "level": 3,
          "title": "30.@RequestMapping 和 @GetMapping 注解的不同之处在哪里",
          "slug": "_30-requestmapping-和-getmapping-注解的不同之处在哪里"
        },
        {
          "level": 3,
          "title": "31.@RequestParam和@PathVariable两个注解的区别",
          "slug": "_31-requestparam和-pathvariable两个注解的区别"
        },
        {
          "level": 3,
          "title": "32.返回 JSON 格式使用什么注解",
          "slug": "_32-返回-json-格式使用什么注解"
        },
        {
          "level": 3,
          "title": "33.什么是SpringMVC拦截器以及如何使用它✔",
          "slug": "_33-什么是springmvc拦截器以及如何使用它✔"
        },
        {
          "level": 3,
          "title": "34.SpringMVC和Structs2的异同",
          "slug": "_34-springmvc和structs2的异同"
        },
        {
          "level": 3,
          "title": "35. REST 代表着什么",
          "slug": "_35-rest-代表着什么"
        },
        {
          "level": 3,
          "title": "36. 什么是安全的 REST 操作",
          "slug": "_36-什么是安全的-rest-操作"
        },
        {
          "level": 3,
          "title": "37. REST API 是无状态的吗",
          "slug": "_37-rest-api-是无状态的吗"
        },
        {
          "level": 3,
          "title": "38. REST安全吗? 你能做什么来保护它",
          "slug": "_38-rest安全吗-你能做什么来保护它"
        },
        {
          "level": 3,
          "title": "39.为什么要用SpringBoot✔",
          "slug": "_39-为什么要用springboot✔"
        },
        {
          "level": 3,
          "title": "SpringBoot中约定优于配置的理解",
          "slug": "springboot中约定优于配置的理解"
        },
        {
          "level": 3,
          "title": "40.SpringBoot中如何对不同环境的属性配置文件的支持",
          "slug": "_40-springboot中如何对不同环境的属性配置文件的支持"
        },
        {
          "level": 3,
          "title": "41.Spring Boot 的核心注解是那个？它主要由那几个注解组成的✔",
          "slug": "_41-spring-boot-的核心注解是那个-它主要由那几个注解组成的✔"
        },
        {
          "level": 3,
          "title": "42.你如何理解SpringBoot中的Starters✔",
          "slug": "_42-你如何理解springboot中的starters✔"
        },
        {
          "level": 3,
          "title": "43.SpringBoot Starter的工作原理是什么",
          "slug": "_43-springboot-starter的工作原理是什么"
        },
        {
          "level": 3,
          "title": "44.保护SpringBoot应用有哪些方法",
          "slug": "_44-保护springboot应用有哪些方法"
        },
        {
          "level": 3,
          "title": "45.Spring、SpringBoot和SpringCloud的关系",
          "slug": "_45-spring、springboot和springcloud的关系"
        },
        {
          "level": 3,
          "title": "springboot是如何管理版本依赖的",
          "slug": "springboot是如何管理版本依赖的"
        },
        {
          "level": 3,
          "title": "Springboot自动配置原理✔",
          "slug": "springboot自动配置原理✔"
        },
        {
          "level": 3,
          "title": "SpringBoot如何解决跨域问题✔",
          "slug": "springboot如何解决跨域问题✔"
        },
        {
          "level": 3,
          "title": "如何实现一个IOC容器",
          "slug": "如何实现一个ioc容器"
        },
        {
          "level": 3,
          "title": "Spring单例bean和单例模式",
          "slug": "spring单例bean和单例模式"
        },
        {
          "level": 3,
          "title": "Spring事务什么时候会失效（Spring中事务失效的场景有哪些）✔",
          "slug": "spring事务什么时候会失效-spring中事务失效的场景有哪些-✔"
        },
        {
          "level": 3,
          "title": "为什么有些公司禁止使用@Transactional声明式事务✔",
          "slug": "为什么有些公司禁止使用-transactional声明式事务✔"
        },
        {
          "level": 3,
          "title": "Spring是什么",
          "slug": "spring是什么"
        },
        {
          "level": 3,
          "title": "Spring Boot是如何启动Tomcat的",
          "slug": "spring-boot是如何启动tomcat的"
        },
        {
          "level": 3,
          "title": "Spring Boot中配置⽂件的加载顺序是怎样的",
          "slug": "spring-boot中配置文件的加载顺序是怎样的"
        },
        {
          "level": 3,
          "title": "@Component和@Bean区别✔",
          "slug": "component和-bean区别✔"
        },
        {
          "level": 3,
          "title": "Spring 的常见注解有哪些✔",
          "slug": "spring-的常见注解有哪些✔"
        },
        {
          "level": 3,
          "title": "SpringMVC常见的注解有哪些✔",
          "slug": "springmvc常见的注解有哪些✔"
        },
        {
          "level": 3,
          "title": "Springboot常见注解有哪些✔",
          "slug": "springboot常见注解有哪些✔"
        },
        {
          "level": 2,
          "title": "Mybatis",
          "slug": "mybatis"
        },
        {
          "level": 3,
          "title": "1.Mybatis是什么",
          "slug": "_1-mybatis是什么"
        },
        {
          "level": 3,
          "title": "2.Mybatis的优缺点✔",
          "slug": "_2-mybatis的优缺点✔"
        },
        {
          "level": 3,
          "title": "3.为什么说Mybatis是半自动ORM映射工具？它与全自动的区别在哪里",
          "slug": "_3-为什么说mybatis是半自动orm映射工具-它与全自动的区别在哪里"
        },
        {
          "level": 3,
          "title": "4.Hibernate和MyBatis的区别✔",
          "slug": "_4-hibernate和mybatis的区别✔"
        },
        {
          "level": 3,
          "title": "5.JDBC编程有哪些不足之处，Mybatis是如何解决这些问题的",
          "slug": "_5-jdbc编程有哪些不足之处-mybatis是如何解决这些问题的"
        },
        {
          "level": 3,
          "title": "6.Mybatis编程步骤是什么样的",
          "slug": "_6-mybatis编程步骤是什么样的"
        },
        {
          "level": 3,
          "title": "8.Mybatis的优点",
          "slug": "_8-mybatis的优点"
        },
        {
          "level": 3,
          "title": "9.Mybatis框架的缺点",
          "slug": "_9-mybatis框架的缺点"
        },
        {
          "level": 3,
          "title": "10.#{}和${}的区别✔",
          "slug": "_10-和-的区别✔"
        },
        {
          "level": 3,
          "title": "11.通常一个XML映射文件，都会写一个Dao接口与之对应，那么这个Dao接口的工作原理是什么？Dao接口里的方法、参数不同时，方法能重载吗",
          "slug": "_11-通常一个xml映射文件-都会写一个dao接口与之对应-那么这个dao接口的工作原理是什么-dao接口里的方法、参数不同时-方法能重载吗"
        },
        {
          "level": 3,
          "title": "12.在Mapper中如何传递多个参数",
          "slug": "_12-在mapper中如何传递多个参数"
        },
        {
          "level": 3,
          "title": "13.Mybatis动态SQL有什么用？执行原理是什么？有哪些动态SQL",
          "slug": "_13-mybatis动态sql有什么用-执行原理是什么-有哪些动态sql"
        },
        {
          "level": 3,
          "title": "14.XML映射文件中，不同的xml映射文件id是否可以重复",
          "slug": "_14-xml映射文件中-不同的xml映射文件id是否可以重复"
        },
        {
          "level": 3,
          "title": "15.Mybatis实现一对一有几种方式？具体是怎么操作的",
          "slug": "_15-mybatis实现一对一有几种方式-具体是怎么操作的"
        },
        {
          "level": 3,
          "title": "16.Mybatis的一级、二级缓存✔",
          "slug": "_16-mybatis的一级、二级缓存✔"
        },
        {
          "level": 3,
          "title": "Mybatis的二级缓存什么时候会清理缓存中的数据✔",
          "slug": "mybatis的二级缓存什么时候会清理缓存中的数据✔"
        },
        {
          "level": 3,
          "title": "18.使用Mybatis的Mapping接口调用时有哪些要求",
          "slug": "_18-使用mybatis的mapping接口调用时有哪些要求"
        },
        {
          "level": 3,
          "title": "Mybatis的执行流程✔",
          "slug": "mybatis的执行流程✔"
        },
        {
          "level": 3,
          "title": "Mybatis是否支持延迟加载✔",
          "slug": "mybatis是否支持延迟加载✔"
        },
        {
          "level": 3,
          "title": "延迟加载的底层原理知道吗",
          "slug": "延迟加载的底层原理知道吗"
        },
        {
          "level": 2,
          "title": "Other",
          "slug": "other"
        },
        {
          "level": 3,
          "title": "jsp的8个隐含对象有哪些",
          "slug": "jsp的8个隐含对象有哪些"
        }
      ],
      "size": "20.18kb"
    },
    {
      "title": "Redis",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/02-Redis.html",
      "relativePath": "handbook/Interview/02-Redis.md",
      "key": "v-5f9a35ae",
      "path": "/handbook/Interview/02-Redis.html",
      "headers": [
        {
          "level": 2,
          "title": "Redis基础",
          "slug": "redis基础"
        },
        {
          "level": 3,
          "title": "1.Redis是什么？简述它的优缺点",
          "slug": "_1-redis是什么-简述它的优缺点"
        },
        {
          "level": 3,
          "title": "2.Redis为什么这么快✔",
          "slug": "_2-redis为什么这么快✔"
        },
        {
          "level": 3,
          "title": "3.Redis相比Memcached有哪些优势",
          "slug": "_3-redis相比memcached有哪些优势"
        },
        {
          "level": 3,
          "title": "4.为什么要用redis做缓存",
          "slug": "_4-为什么要用redis做缓存"
        },
        {
          "level": 3,
          "title": "5.为什么要用redis而不用map/guava做缓存",
          "slug": "_5-为什么要用redis而不用map-guava做缓存"
        },
        {
          "level": 3,
          "title": "6.Redis的常用场景有哪些✔",
          "slug": "_6-redis的常用场景有哪些✔"
        },
        {
          "level": 3,
          "title": "7.Redis的数据类型有哪些",
          "slug": "_7-redis的数据类型有哪些"
        },
        {
          "level": 3,
          "title": "Redis大key怎么处理✔",
          "slug": "redis大key怎么处理✔"
        },
        {
          "level": 2,
          "title": "持久化",
          "slug": "持久化"
        },
        {
          "level": 3,
          "title": "8.Redis持久化机制✔",
          "slug": "_8-redis持久化机制✔"
        },
        {
          "level": 3,
          "title": "9.如何选择合适的持久化方式",
          "slug": "_9-如何选择合适的持久化方式"
        },
        {
          "level": 3,
          "title": "10.Redis持久化数据和缓存怎么做扩容",
          "slug": "_10-redis持久化数据和缓存怎么做扩容"
        },
        {
          "level": 2,
          "title": "过期键的删除策略、淘汰策略",
          "slug": "过期键的删除策略、淘汰策略"
        },
        {
          "level": 3,
          "title": "11.Redis过期键的删除策略✔",
          "slug": "_11-redis过期键的删除策略✔"
        },
        {
          "level": 3,
          "title": "12.Redis key的过期时间和永久有效分布怎么设置",
          "slug": "_12-redis-key的过期时间和永久有效分布怎么设置"
        },
        {
          "level": 3,
          "title": "13.Redis内存淘汰策略✔（缓存过多，内存是有限的，内存被占满了怎么办）",
          "slug": "_13-redis内存淘汰策略✔-缓存过多-内存是有限的-内存被占满了怎么办"
        },
        {
          "level": 2,
          "title": "缓存异常",
          "slug": "缓存异常"
        },
        {
          "level": 3,
          "title": "14.如何保证缓存与数据库双写时的数据一致性✔",
          "slug": "_14-如何保证缓存与数据库双写时的数据一致性✔"
        },
        {
          "level": 3,
          "title": "17.什么是缓存击穿✔",
          "slug": "_17-什么是缓存击穿✔"
        },
        {
          "level": 3,
          "title": "18.什么是缓存穿透✔",
          "slug": "_18-什么是缓存穿透✔"
        },
        {
          "level": 3,
          "title": "19.什么是缓存雪崩✔",
          "slug": "_19-什么是缓存雪崩✔"
        },
        {
          "level": 3,
          "title": "20.什么是缓存预热",
          "slug": "_20-什么是缓存预热"
        },
        {
          "level": 3,
          "title": "21.什么是缓存降级",
          "slug": "_21-什么是缓存降级"
        },
        {
          "level": 2,
          "title": "线程模型",
          "slug": "线程模型"
        },
        {
          "level": 3,
          "title": "22.Redis为何选择单线程",
          "slug": "_22-redis为何选择单线程"
        },
        {
          "level": 3,
          "title": "23.Redis真的是单线程",
          "slug": "_23-redis真的是单线程"
        },
        {
          "level": 3,
          "title": "24.Redis6.0为何引入多线程",
          "slug": "_24-redis6-0为何引入多线程"
        },
        {
          "level": 3,
          "title": "25.Redis6.0采用多线程后，性能提升效果如何",
          "slug": "_25-redis6-0采用多线程后-性能提升效果如何"
        },
        {
          "level": 3,
          "title": "26.介绍下Redis的线程模型",
          "slug": "_26-介绍下redis的线程模型"
        },
        {
          "level": 3,
          "title": "27.Redis 6.0 多线程的实现机制",
          "slug": "_27-redis-6-0-多线程的实现机制"
        },
        {
          "level": 3,
          "title": "28.Redis6.0开启多线程后，是否会存在线程并发安全问题",
          "slug": "_28-redis6-0开启多线程后-是否会存在线程并发安全问题"
        },
        {
          "level": 3,
          "title": "29.Redis6.0与Memcached多线程模型的对比",
          "slug": "_29-redis6-0与memcached多线程模型的对比"
        },
        {
          "level": 2,
          "title": "事务",
          "slug": "事务"
        },
        {
          "level": 3,
          "title": "30.Redis事务的概念",
          "slug": "_30-redis事务的概念"
        },
        {
          "level": 3,
          "title": "31.Redis事务的三个阶段",
          "slug": "_31-redis事务的三个阶段"
        },
        {
          "level": 3,
          "title": "32.Redis事务相关命令",
          "slug": "_32-redis事务相关命令"
        },
        {
          "level": 3,
          "title": "33.Redis事务支持隔离性吗",
          "slug": "_33-redis事务支持隔离性吗"
        },
        {
          "level": 3,
          "title": "34.Redis为什么不支持事务回滚",
          "slug": "_34-redis为什么不支持事务回滚"
        },
        {
          "level": 3,
          "title": "35.Redis事务其他实现",
          "slug": "_35-redis事务其他实现"
        },
        {
          "level": 2,
          "title": "主从、哨兵、集群",
          "slug": "主从、哨兵、集群"
        },
        {
          "level": 3,
          "title": "36.Redis常见使用方式有哪些✔",
          "slug": "_36-redis常见使用方式有哪些✔"
        },
        {
          "level": 3,
          "title": "37.介绍下Redis的单副本",
          "slug": "_37-介绍下redis的单副本"
        },
        {
          "level": 3,
          "title": "38.介绍下Redis多副本（主从）✔",
          "slug": "_38-介绍下redis多副本-主从-✔"
        },
        {
          "level": 3,
          "title": "介绍一下主从同步✔",
          "slug": "介绍一下主从同步✔"
        },
        {
          "level": 3,
          "title": "主从同步数据的流程✔",
          "slug": "主从同步数据的流程✔"
        },
        {
          "level": 3,
          "title": "39.介绍下Redis Sentinel（哨兵）✔",
          "slug": "_39-介绍下redis-sentinel-哨兵-✔"
        },
        {
          "level": 3,
          "title": "怎么保证Redis的高并发高可用✔",
          "slug": "怎么保证redis的高并发高可用✔"
        },
        {
          "level": 3,
          "title": "使用redis是单点还是集群，哪种集群✔",
          "slug": "使用redis是单点还是集群-哪种集群✔"
        },
        {
          "level": 3,
          "title": "redis集群脑裂，该怎么解决呢✔",
          "slug": "redis集群脑裂-该怎么解决呢✔"
        },
        {
          "level": 3,
          "title": "40.介绍下Redis Cluster （分片集群）✔",
          "slug": "_40-介绍下redis-cluster-分片集群-✔"
        },
        {
          "level": 3,
          "title": "redis的分片集群有什么作用✔",
          "slug": "redis的分片集群有什么作用✔"
        },
        {
          "level": 3,
          "title": "Redis分片集群中数据是怎么存储和读取的✔",
          "slug": "redis分片集群中数据是怎么存储和读取的✔"
        },
        {
          "level": 3,
          "title": "41.介绍下Redis自研",
          "slug": "_41-介绍下redis自研"
        },
        {
          "level": 3,
          "title": "42.Redis高可用方案具体怎么实施✔",
          "slug": "_42-redis高可用方案具体怎么实施✔"
        },
        {
          "level": 3,
          "title": "43.了解主从复制原理吗✔",
          "slug": "_43-了解主从复制原理吗✔"
        },
        {
          "level": 3,
          "title": "44.由于主从延迟导致读取到过期数据怎么处理",
          "slug": "_44-由于主从延迟导致读取到过期数据怎么处理"
        },
        {
          "level": 3,
          "title": "45.主从复制的过程中，如果因为网络原因停止复制了会怎么样",
          "slug": "_45-主从复制的过程中-如果因为网络原因停止复制了会怎么样"
        },
        {
          "level": 3,
          "title": "46.Redis主从架构数据会丢失吗，为什么",
          "slug": "_46-redis主从架构数据会丢失吗-为什么"
        },
        {
          "level": 3,
          "title": "47.如何解决主从架构数据丢失的问题",
          "slug": "_47-如何解决主从架构数据丢失的问题"
        },
        {
          "level": 3,
          "title": "48.Redis哨兵是怎么工作的",
          "slug": "_48-redis哨兵是怎么工作的"
        },
        {
          "level": 3,
          "title": "49.故障转移时会从剩下的slave选举一个新的master，被选举为master的标准是什么",
          "slug": "_49-故障转移时会从剩下的slave选举一个新的master-被选举为master的标准是什么"
        },
        {
          "level": 3,
          "title": "50.同步配置的时候其他哨兵根据什么更新自己的配置呢",
          "slug": "_50-同步配置的时候其他哨兵根据什么更新自己的配置呢"
        },
        {
          "level": 3,
          "title": "51. 为什么Redis哨兵集群只有2个节点无法正常工作",
          "slug": "_51-为什么redis哨兵集群只有2个节点无法正常工作"
        },
        {
          "level": 3,
          "title": "52.Redis cluster中是如何实现数据分布式的？这种方式有什么优点",
          "slug": "_52-redis-cluster中是如何实现数据分布式的-这种方式有什么优点"
        },
        {
          "level": 3,
          "title": "53.Redis cluster节点间通信是什么机制",
          "slug": "_53-redis-cluster节点间通信是什么机制"
        },
        {
          "level": 2,
          "title": "分布式问题",
          "slug": "分布式问题"
        },
        {
          "level": 3,
          "title": "54.什么是分布式锁？为什么用分布式锁",
          "slug": "_54-什么是分布式锁-为什么用分布式锁"
        },
        {
          "level": 3,
          "title": "55.常见的分布式锁有哪些解决方案",
          "slug": "_55-常见的分布式锁有哪些解决方案"
        },
        {
          "level": 3,
          "title": "56.Redis实现分布式锁✔",
          "slug": "_56-redis实现分布式锁✔"
        },
        {
          "level": 3,
          "title": "57.了解RedLock吗",
          "slug": "_57-了解redlock吗"
        },
        {
          "level": 3,
          "title": "58.RedLock的原理",
          "slug": "_58-redlock的原理"
        },
        {
          "level": 2,
          "title": "其他",
          "slug": "其他"
        },
        {
          "level": 3,
          "title": "59.Redis如何做内存优化",
          "slug": "_59-redis如何做内存优化"
        },
        {
          "level": 3,
          "title": "60.如果现在有个读超高并发的系统，用Redis来抗住大部分读请求，你会怎么设计",
          "slug": "_60-如果现在有个读超高并发的系统-用redis来抗住大部分读请求-你会怎么设计"
        },
        {
          "level": 3,
          "title": "怎么使用Redis实现一个延时队列✔",
          "slug": "怎么使用redis实现一个延时队列✔"
        }
      ],
      "size": "18.95kb"
    },
    {
      "title": "微服务",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/05-%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",
      "relativePath": "handbook/Interview/05-微服务.md",
      "key": "v-103f2471",
      "path": "/handbook/Interview/05-%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",
      "headers": [
        {
          "level": 2,
          "title": "基础",
          "slug": "基础"
        },
        {
          "level": 3,
          "title": "如何理解微服务✔",
          "slug": "如何理解微服务✔"
        },
        {
          "level": 3,
          "title": "常见的远程调用有几种✔",
          "slug": "常见的远程调用有几种✔"
        },
        {
          "level": 2,
          "title": "SpringCloud",
          "slug": "springcloud"
        },
        {
          "level": 3,
          "title": "Spring Cloud 5大组件有哪些✔",
          "slug": "spring-cloud-5大组件有哪些✔"
        },
        {
          "level": 3,
          "title": "服务注册和发现是什么意思？Spring Cloud 如何实现服务注册发现✔",
          "slug": "服务注册和发现是什么意思-spring-cloud-如何实现服务注册发现✔"
        },
        {
          "level": 3,
          "title": "能说下nacos与eureka的区别✔",
          "slug": "能说下nacos与eureka的区别✔"
        },
        {
          "level": 3,
          "title": "你们项目负载均衡如何实现的✔",
          "slug": "你们项目负载均衡如何实现的✔"
        },
        {
          "level": 3,
          "title": "Ribbon负载均衡策略有哪些✔",
          "slug": "ribbon负载均衡策略有哪些✔"
        },
        {
          "level": 3,
          "title": "如果想自定义负载均衡策略如何实现✔",
          "slug": "如果想自定义负载均衡策略如何实现✔"
        },
        {
          "level": 3,
          "title": "什么是服务雪崩，怎么解决这个问题✔",
          "slug": "什么是服务雪崩-怎么解决这个问题✔"
        },
        {
          "level": 3,
          "title": "你们的微服务是怎么监控的✔",
          "slug": "你们的微服务是怎么监控的✔"
        },
        {
          "level": 3,
          "title": "你们项目中有没有做过限流 ? 怎么做的 ✔",
          "slug": "你们项目中有没有做过限流-怎么做的-✔"
        },
        {
          "level": 3,
          "title": "限流常见的算法有哪些呢✔",
          "slug": "限流常见的算法有哪些呢✔"
        },
        {
          "level": 3,
          "title": "什么是CAP理论✔",
          "slug": "什么是cap理论✔"
        },
        {
          "level": 3,
          "title": "为什么分布式系统中无法同时保证一致性和可用性✔",
          "slug": "为什么分布式系统中无法同时保证一致性和可用性✔"
        },
        {
          "level": 3,
          "title": "什么是BASE理论✔",
          "slug": "什么是base理论✔"
        },
        {
          "level": 3,
          "title": "分布式事务解决方案✔",
          "slug": "分布式事务解决方案✔"
        },
        {
          "level": 3,
          "title": "分布式服务的接口幂等性如何设计✔",
          "slug": "分布式服务的接口幂等性如何设计✔"
        },
        {
          "level": 3,
          "title": "xxl-job路由策略有哪些✔",
          "slug": "xxl-job路由策略有哪些✔"
        },
        {
          "level": 3,
          "title": "xxl-job任务执行失败怎么解决 ✔",
          "slug": "xxl-job任务执行失败怎么解决-✔"
        },
        {
          "level": 3,
          "title": "如果有大数据量的任务同时都需要执行，怎么解决✔",
          "slug": "如果有大数据量的任务同时都需要执行-怎么解决✔"
        },
        {
          "level": 2,
          "title": "Dubbo",
          "slug": "dubbo"
        },
        {
          "level": 3,
          "title": "Dubbo是什么",
          "slug": "dubbo是什么"
        },
        {
          "level": 3,
          "title": "Dubbo和Spring Cloud有什么区别",
          "slug": "dubbo和spring-cloud有什么区别"
        }
      ],
      "size": "7.76kb"
    },
    {
      "title": "MySQL",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/03-MySQL.html",
      "relativePath": "handbook/Interview/03-MySQL.md",
      "key": "v-06ce8e29",
      "path": "/handbook/Interview/03-MySQL.html",
      "headers": [
        {
          "level": 2,
          "title": "索引",
          "slug": "索引"
        },
        {
          "level": 3,
          "title": "1.索引是什么（无过滤不索引）✔",
          "slug": "_1-索引是什么-无过滤不索引-✔"
        },
        {
          "level": 3,
          "title": "2.索引有哪些优缺点✔",
          "slug": "_2-索引有哪些优缺点✔"
        },
        {
          "level": 3,
          "title": "数据库索引的原理",
          "slug": "数据库索引的原理"
        },
        {
          "level": 3,
          "title": "3.MySQL有哪几种索引类型✔",
          "slug": "_3-mysql有哪几种索引类型✔"
        },
        {
          "level": 3,
          "title": "4.说一说索引的底层实现✔",
          "slug": "_4-说一说索引的底层实现✔"
        },
        {
          "level": 3,
          "title": "Hash索引和B+树索引的区别✔",
          "slug": "hash索引和b-树索引的区别✔"
        },
        {
          "level": 3,
          "title": "B树和B+树的理解✔",
          "slug": "b树和b-树的理解✔"
        },
        {
          "level": 3,
          "title": "5.为什么索引结构默认使用B+Tree，而不是B-Tree，Hash，二叉树，红黑树✔",
          "slug": "_5-为什么索引结构默认使用b-tree-而不是b-tree-hash-二叉树-红黑树✔"
        },
        {
          "level": 3,
          "title": "6.讲一讲聚簇索引（聚集索引）与非聚簇索引（二级索引）✔",
          "slug": "_6-讲一讲聚簇索引-聚集索引-与非聚簇索引-二级索引-✔"
        },
        {
          "level": 3,
          "title": "什么是回表✔",
          "slug": "什么是回表✔"
        },
        {
          "level": 3,
          "title": "什么是覆盖索引✔",
          "slug": "什么是覆盖索引✔"
        },
        {
          "level": 3,
          "title": "7.非聚簇索引一定会一定会回表查询吗",
          "slug": "_7-非聚簇索引一定会一定会回表查询吗"
        },
        {
          "level": 3,
          "title": "8.联合索引是什么？为什么需要注意联合索引中的顺序",
          "slug": "_8-联合索引是什么-为什么需要注意联合索引中的顺序"
        },
        {
          "level": 3,
          "title": "9.讲一讲MySQL的最左前缀原则（最左匹配原则）✔",
          "slug": "_9-讲一讲mysql的最左前缀原则-最左匹配原则-✔"
        },
        {
          "level": 3,
          "title": "10.讲一讲前缀索引",
          "slug": "_10-讲一讲前缀索引"
        },
        {
          "level": 3,
          "title": "11.了解索引下推吗（减少回表次数）✔",
          "slug": "_11-了解索引下推吗-减少回表次数-✔"
        },
        {
          "level": 3,
          "title": "12.怎么查看MySQL语句有没有使用到索引✔",
          "slug": "_12-怎么查看mysql语句有没有使用到索引✔"
        },
        {
          "level": 3,
          "title": "13.为什么官方建议使用自增长主键作为索引",
          "slug": "_13-为什么官方建议使用自增长主键作为索引"
        },
        {
          "level": 3,
          "title": "14.如何创建索引✔",
          "slug": "_14-如何创建索引✔"
        },
        {
          "level": 3,
          "title": "15.创建索引时需要注意什么✔",
          "slug": "_15-创建索引时需要注意什么✔"
        },
        {
          "level": 3,
          "title": "16.建索引的原则有哪些✔",
          "slug": "_16-建索引的原则有哪些✔"
        },
        {
          "level": 3,
          "title": "17.使用索引查询一定能提高查询的性能吗",
          "slug": "_17-使用索引查询一定能提高查询的性能吗"
        },
        {
          "level": 3,
          "title": "18.什么情况下不走索引（索引失效场景）✔",
          "slug": "_18-什么情况下不走索引-索引失效场景-✔"
        },
        {
          "level": 2,
          "title": "基础",
          "slug": "基础"
        },
        {
          "level": 3,
          "title": "19.数据库的三范式是什么",
          "slug": "_19-数据库的三范式是什么"
        },
        {
          "level": 3,
          "title": "20.MySQL支持哪些存储引擎✔",
          "slug": "_20-mysql支持哪些存储引擎✔"
        },
        {
          "level": 3,
          "title": "InnoDB和MyISAM有什么区别✔",
          "slug": "innodb和myisam有什么区别✔"
        },
        {
          "level": 3,
          "title": "21.超键、候选键、主键、外键分别是什么",
          "slug": "_21-超键、候选键、主键、外键分别是什么"
        },
        {
          "level": 3,
          "title": "22.SQL约束有哪几种✔",
          "slug": "_22-sql约束有哪几种✔"
        },
        {
          "level": 3,
          "title": "23.MySQL中的varchar和char有什么区别✔",
          "slug": "_23-mysql中的varchar和char有什么区别✔"
        },
        {
          "level": 3,
          "title": "24.MySQL中in和exists区别",
          "slug": "_24-mysql中in和exists区别"
        },
        {
          "level": 3,
          "title": "25.drop、delete与truncate的区别✔",
          "slug": "_25-drop、delete与truncate的区别✔"
        },
        {
          "level": 3,
          "title": "26.什么是存储过程？有哪些优缺点",
          "slug": "_26-什么是存储过程-有哪些优缺点"
        },
        {
          "level": 3,
          "title": "27.MySQL执行查询的过程✔",
          "slug": "_27-mysql执行查询的过程✔"
        },
        {
          "level": 3,
          "title": "为什么不能用浮点型表示金额",
          "slug": "为什么不能用浮点型表示金额"
        },
        {
          "level": 3,
          "title": "为什么数据库字段建议设置为NOT NULL✔",
          "slug": "为什么数据库字段建议设置为not-null✔"
        },
        {
          "level": 2,
          "title": "事务",
          "slug": "事务"
        },
        {
          "level": 3,
          "title": "28.什么是数据库事务",
          "slug": "_28-什么是数据库事务"
        },
        {
          "level": 3,
          "title": "29.介绍一下事务具有的四个特征（特性）✔",
          "slug": "_29-介绍一下事务具有的四个特征-特性-✔"
        },
        {
          "level": 3,
          "title": "30.说一下MySQL的四种隔离级别✔",
          "slug": "_30-说一下mysql的四种隔离级别✔"
        },
        {
          "level": 3,
          "title": "31.什么是脏读、幻读、不可重复读（并发事务带来哪些问题）✔",
          "slug": "_31-什么是脏读、幻读、不可重复读-并发事务带来哪些问题-✔"
        },
        {
          "level": 3,
          "title": "32.事务的实现原理",
          "slug": "_32-事务的实现原理"
        },
        {
          "level": 3,
          "title": "33.MySQL事务日志介绍下（undo log和redo log的区别）✔",
          "slug": "_33-mysql事务日志介绍下-undo-log和redo-log的区别-✔"
        },
        {
          "level": 3,
          "title": "34.什么是MySQL的binlog",
          "slug": "_34-什么是mysql的binlog"
        },
        {
          "level": 3,
          "title": "binlog和redolog有什么区别✔",
          "slug": "binlog和redolog有什么区别✔"
        },
        {
          "level": 3,
          "title": "35.在事务中可以混合使用存储引擎吗",
          "slug": "_35-在事务中可以混合使用存储引擎吗"
        },
        {
          "level": 3,
          "title": "36.MySQL中是如何实现事务隔离的",
          "slug": "_36-mysql中是如何实现事务隔离的"
        },
        {
          "level": 3,
          "title": "37.什么是MVCC✔",
          "slug": "_37-什么是mvcc✔"
        },
        {
          "level": 3,
          "title": "38.MVCC的实现原理（事务中的隔离性是如何保证的呢）✔",
          "slug": "_38-mvcc的实现原理-事务中的隔离性是如何保证的呢-✔"
        },
        {
          "level": 3,
          "title": "InnoDB如何解决幻读✔",
          "slug": "innodb如何解决幻读✔"
        },
        {
          "level": 2,
          "title": "锁",
          "slug": "锁"
        },
        {
          "level": 3,
          "title": "39.为什么要加锁",
          "slug": "_39-为什么要加锁"
        },
        {
          "level": 3,
          "title": "40.按照锁的粒度分数据库锁有哪些",
          "slug": "_40-按照锁的粒度分数据库锁有哪些"
        },
        {
          "level": 3,
          "title": "41.从锁的类别上分MySQL那些锁呢",
          "slug": "_41-从锁的类别上分mysql那些锁呢"
        },
        {
          "level": 3,
          "title": "42.数据库的乐观锁和悲观锁是什么？怎么实现的✔",
          "slug": "_42-数据库的乐观锁和悲观锁是什么-怎么实现的✔"
        },
        {
          "level": 3,
          "title": "43.InnoDB引擎的行锁是怎么实现的",
          "slug": "_43-innodb引擎的行锁是怎么实现的"
        },
        {
          "level": 3,
          "title": "44.什么是死锁？怎么解决",
          "slug": "_44-什么是死锁-怎么解决"
        },
        {
          "level": 3,
          "title": "45.隔离级别与锁的关系",
          "slug": "_45-隔离级别与锁的关系"
        },
        {
          "level": 3,
          "title": "46.优化锁的方面的意见",
          "slug": "_46-优化锁的方面的意见"
        },
        {
          "level": 2,
          "title": "分库分表",
          "slug": "分库分表"
        },
        {
          "level": 3,
          "title": "47.为什么要分库分表",
          "slug": "_47-为什么要分库分表"
        },
        {
          "level": 3,
          "title": "48.用过哪些分库分表中间件？不同的分库分表中间件都有什么优点",
          "slug": "_48-用过哪些分库分表中间件-不同的分库分表中间件都有什么优点"
        },
        {
          "level": 3,
          "title": "49.如何对数据库进行垂直拆分或水平拆分的✔",
          "slug": "_49-如何对数据库进行垂直拆分或水平拆分的✔"
        },
        {
          "level": 3,
          "title": "使用过水平分库吗✔",
          "slug": "使用过水平分库吗✔"
        },
        {
          "level": 3,
          "title": "你们项目用过MySQL的分库分表吗",
          "slug": "你们项目用过mysql的分库分表吗"
        },
        {
          "level": 2,
          "title": "读写分离、中从同步（复制）",
          "slug": "读写分离、中从同步-复制"
        },
        {
          "level": 3,
          "title": "50.什么是MySQL主从同步",
          "slug": "_50-什么是mysql主从同步"
        },
        {
          "level": 3,
          "title": "51.MySQL主从同步的目的？为什么要做主从同步",
          "slug": "_51-mysql主从同步的目的-为什么要做主从同步"
        },
        {
          "level": 3,
          "title": "52.如何实现MySQL的读写分离",
          "slug": "_52-如何实现mysql的读写分离"
        },
        {
          "level": 3,
          "title": "53.MySQL主从复制流程和原理(MySQL主从同步原理)✔",
          "slug": "_53-mysql主从复制流程和原理-mysql主从同步原理-✔"
        },
        {
          "level": 3,
          "title": "54.MySQL主从同步延时问题如何解决✔",
          "slug": "_54-mysql主从同步延时问题如何解决✔"
        },
        {
          "level": 2,
          "title": "优化",
          "slug": "优化"
        },
        {
          "level": 3,
          "title": "55.如何定位及优化SQL语句的性能问题(SQL语句执行很慢, 如何分析)✔",
          "slug": "_55-如何定位及优化sql语句的性能问题-sql语句执行很慢-如何分析-✔"
        },
        {
          "level": 3,
          "title": "56.大数据表查询，怎么优化",
          "slug": "_56-大数据表查询-怎么优化"
        },
        {
          "level": 3,
          "title": "57.超大分页怎么处理✔",
          "slug": "_57-超大分页怎么处理✔"
        },
        {
          "level": 3,
          "title": "58.统计过慢查询吗？对慢查询都怎么优化过✔",
          "slug": "_58-统计过慢查询吗-对慢查询都怎么优化过✔"
        },
        {
          "level": 3,
          "title": "如何定位慢查询✔",
          "slug": "如何定位慢查询✔"
        },
        {
          "level": 3,
          "title": "59.如何优化查询过程中的数据访问",
          "slug": "_59-如何优化查询过程中的数据访问"
        },
        {
          "level": 3,
          "title": "60.如何优化关联查询",
          "slug": "_60-如何优化关联查询"
        },
        {
          "level": 3,
          "title": "61.数据库结构优化",
          "slug": "_61-数据库结构优化"
        },
        {
          "level": 3,
          "title": "62.MySQL数据库CPU飙升到500%的话他怎么处理",
          "slug": "_62-mysql数据库cpu飙升到500-的话他怎么处理"
        },
        {
          "level": 3,
          "title": "63.大表怎么优化",
          "slug": "_63-大表怎么优化"
        },
        {
          "level": 3,
          "title": "SQL优化经验✔",
          "slug": "sql优化经验✔"
        },
        {
          "level": 3,
          "title": "优化数据库的方法有哪些",
          "slug": "优化数据库的方法有哪些"
        },
        {
          "level": 3,
          "title": "limit 500000,10和limit 10速度一样快吗",
          "slug": "limit-500000-10和limit-10速度一样快吗"
        },
        {
          "level": 3,
          "title": "使用innodb引擎，mysql索引的最左前缀如何优化orderby语句",
          "slug": "使用innodb引擎-mysql索引的最左前缀如何优化orderby语句"
        },
        {
          "level": 2,
          "title": "其他",
          "slug": "其他"
        }
      ],
      "size": "27.88kb"
    },
    {
      "title": "消息中间件MQ",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/06-%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6.html",
      "relativePath": "handbook/Interview/06-消息中间件.md",
      "key": "v-b864ad96",
      "path": "/handbook/Interview/06-%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6.html",
      "headers": [
        {
          "level": 2,
          "title": "MQ",
          "slug": "mq"
        },
        {
          "level": 3,
          "title": "为什么要用MQ✔",
          "slug": "为什么要用mq✔"
        },
        {
          "level": 3,
          "title": "消息队列的缺点✔",
          "slug": "消息队列的缺点✔"
        },
        {
          "level": 3,
          "title": "Kafka、ActiveMQ、RabbitMQ、RocketMQ 有什么优缺点✔",
          "slug": "kafka、activemq、rabbitmq、rocketmq-有什么优缺点✔"
        },
        {
          "level": 2,
          "title": "RabbitMQ",
          "slug": "rabbitmq"
        },
        {
          "level": 3,
          "title": "RabbitMQ-如何保证消息不丢失✔",
          "slug": "rabbitmq-如何保证消息不丢失✔"
        },
        {
          "level": 3,
          "title": "RabbitMQ消息的重复消费问题如何解决的✔",
          "slug": "rabbitmq消息的重复消费问题如何解决的✔"
        },
        {
          "level": 3,
          "title": "那你还知道其他的解决方案吗✔",
          "slug": "那你还知道其他的解决方案吗✔"
        },
        {
          "level": 3,
          "title": "RabbitMQ中死信交换机（RabbitMQ延迟队列有了解过嘛）✔",
          "slug": "rabbitmq中死信交换机-rabbitmq延迟队列有了解过嘛-✔"
        },
        {
          "level": 3,
          "title": "如果有100万消息堆积在MQ , 如何解决✔",
          "slug": "如果有100万消息堆积在mq-如何解决✔"
        },
        {
          "level": 3,
          "title": "RabbitMQ的高可用机制有了解过嘛✔",
          "slug": "rabbitmq的高可用机制有了解过嘛✔"
        },
        {
          "level": 3,
          "title": "那出现丢数据怎么解决呢✔",
          "slug": "那出现丢数据怎么解决呢✔"
        },
        {
          "level": 3,
          "title": "说说Broker服务节点、Queue队列、Exchange交换器",
          "slug": "说说broker服务节点、queue队列、exchange交换器"
        },
        {
          "level": 2,
          "title": "Kafka",
          "slug": "kafka"
        },
        {
          "level": 3,
          "title": "什么是Apache Kafka",
          "slug": "什么是apache-kafka"
        },
        {
          "level": 3,
          "title": "Kafka都有哪些特点✔",
          "slug": "kafka都有哪些特点✔"
        },
        {
          "level": 3,
          "title": "Kafka 的设计架构✔",
          "slug": "kafka-的设计架构✔"
        },
        {
          "level": 3,
          "title": "Kafka消息是采用Pull模式，还是Push模式✔",
          "slug": "kafka消息是采用pull模式-还是push模式✔"
        },
        {
          "level": 3,
          "title": "Kafka是如何保证消息不丢失✔",
          "slug": "kafka是如何保证消息不丢失✔"
        },
        {
          "level": 3,
          "title": "kafka 的数据是放在磁盘上还是内存上，为什么速度会快",
          "slug": "kafka-的数据是放在磁盘上还是内存上-为什么速度会快"
        },
        {
          "level": 3,
          "title": "Kafka中消息的重复消费问题如何解决的✔",
          "slug": "kafka中消息的重复消费问题如何解决的✔"
        },
        {
          "level": 3,
          "title": "Kafka是如何保证消费的顺序性✔",
          "slug": "kafka是如何保证消费的顺序性✔"
        },
        {
          "level": 3,
          "title": "Kafka的高可用机制有了解过嘛✔",
          "slug": "kafka的高可用机制有了解过嘛✔"
        },
        {
          "level": 3,
          "title": "解释一下复制机制中的ISR✔",
          "slug": "解释一下复制机制中的isr✔"
        },
        {
          "level": 3,
          "title": "Kafka数据清理机制了解过嘛✔",
          "slug": "kafka数据清理机制了解过嘛✔"
        },
        {
          "level": 3,
          "title": "Kafka中实现高性能的设计有了解过嘛✔",
          "slug": "kafka中实现高性能的设计有了解过嘛✔"
        },
        {
          "level": 3,
          "title": "Kafka的优化",
          "slug": "kafka的优化"
        },
        {
          "level": 2,
          "title": "RocketMQ",
          "slug": "rocketmq"
        }
      ],
      "size": "10.60kb"
    },
    {
      "title": "Java并发",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/08-Java%E5%B9%B6%E5%8F%91.html",
      "relativePath": "handbook/Interview/08-Java并发.md",
      "key": "v-f3e421ae",
      "path": "/handbook/Interview/08-Java%E5%B9%B6%E5%8F%91.html",
      "headers": [
        {
          "level": 2,
          "title": "基础知识",
          "slug": "基础知识"
        },
        {
          "level": 3,
          "title": "1.线程和进程有什么区别✔",
          "slug": "_1-线程和进程有什么区别✔"
        },
        {
          "level": 3,
          "title": "2. 创建线程的三种方式的对比✔",
          "slug": "_2-创建线程的三种方式的对比✔"
        },
        {
          "level": 3,
          "title": "3. 为什么要使用多线程呢",
          "slug": "_3-为什么要使用多线程呢"
        },
        {
          "level": 3,
          "title": "4. 线程的状态流转✔",
          "slug": "_4-线程的状态流转✔"
        },
        {
          "level": 3,
          "title": "5. 什么是线程死锁?如何避免死锁✔",
          "slug": "_5-什么是线程死锁-如何避免死锁✔"
        },
        {
          "level": 3,
          "title": "如何进行死锁诊断",
          "slug": "如何进行死锁诊断"
        },
        {
          "level": 3,
          "title": "ConcurrentHashMap 底层具体实现原理✔",
          "slug": "concurrenthashmap-底层具体实现原理✔"
        },
        {
          "level": 3,
          "title": "6. 常见的对比✔",
          "slug": "_6-常见的对比✔"
        },
        {
          "level": 3,
          "title": "线程池中shutdown()和shutdownNow()方法的区别✔",
          "slug": "线程池中shutdown-和shutdownnow-方法的区别✔"
        },
        {
          "level": 3,
          "title": "7. sleep() 方法和 wait() 方法区别和共同点✔",
          "slug": "_7-sleep-方法和-wait-方法区别和共同点✔"
        },
        {
          "level": 3,
          "title": "Thread.sleep(0)有意义吗✔",
          "slug": "thread-sleep-0-有意义吗✔"
        },
        {
          "level": 3,
          "title": "线程的 run()和 start()有什么区别",
          "slug": "线程的-run-和-start-有什么区别"
        },
        {
          "level": 3,
          "title": "新建 T1、T2、T3 三个线程，如何保证它们按顺序执行✔",
          "slug": "新建-t1、t2、t3-三个线程-如何保证它们按顺序执行✔"
        },
        {
          "level": 3,
          "title": "notify()和 notifyAll()有什么区别✔",
          "slug": "notify-和-notifyall-有什么区别✔"
        },
        {
          "level": 3,
          "title": "wait和notify为什么要在synchronized代码块中✔",
          "slug": "wait和notify为什么要在synchronized代码块中✔"
        },
        {
          "level": 3,
          "title": "如何停止一个正在运行的线程",
          "slug": "如何停止一个正在运行的线程"
        },
        {
          "level": 3,
          "title": "如何知道线程池中的任务已经执行完成✔",
          "slug": "如何知道线程池中的任务已经执行完成✔"
        },
        {
          "level": 3,
          "title": "9. Thread类中的yield方法有什么作用",
          "slug": "_9-thread类中的yield方法有什么作用"
        },
        {
          "level": 3,
          "title": "10. 谈谈volatile的使用及其原理✔",
          "slug": "_10-谈谈volatile的使用及其原理✔"
        },
        {
          "level": 3,
          "title": "11. 如何创建线程实例并运行✔",
          "slug": "_11-如何创建线程实例并运行✔"
        },
        {
          "level": 3,
          "title": "12. 线程阻塞的三种情况",
          "slug": "_12-线程阻塞的三种情况"
        },
        {
          "level": 3,
          "title": "13. 线程死亡的三种方式",
          "slug": "_13-线程死亡的三种方式"
        },
        {
          "level": 3,
          "title": "14. 为什么我们调用start()方法时会执行run()方法，为什么我们不能直接调用run()方法",
          "slug": "_14-为什么我们调用start-方法时会执行run-方法-为什么我们不能直接调用run-方法"
        },
        {
          "level": 3,
          "title": "15. 守护线程是什么✔",
          "slug": "_15-守护线程是什么✔"
        },
        {
          "level": 3,
          "title": "16. 了解Fork/Join框架吗",
          "slug": "_16-了解fork-join框架吗"
        },
        {
          "level": 2,
          "title": "线程中并发锁",
          "slug": "线程中并发锁"
        },
        {
          "level": 3,
          "title": "17. CAS了解吗，谈一下CAS机制✔",
          "slug": "_17-cas了解吗-谈一下cas机制✔"
        },
        {
          "level": 3,
          "title": "乐观锁和悲观锁",
          "slug": "乐观锁和悲观锁"
        },
        {
          "level": 3,
          "title": "18. CAS有什么缺陷",
          "slug": "_18-cas有什么缺陷"
        },
        {
          "level": 3,
          "title": "请谈谈你对 volatile 的理解✔",
          "slug": "请谈谈你对-volatile-的理解✔"
        },
        {
          "level": 3,
          "title": "19. synchronized 和 volatile 的区别是什么",
          "slug": "_19-synchronized-和-volatile-的区别是什么"
        },
        {
          "level": 3,
          "title": "20. synchronized 和 Lock 有什么区别✔",
          "slug": "_20-synchronized-和-lock-有什么区别✔"
        },
        {
          "level": 3,
          "title": "21. synchronized 和 ReentrantLock 区别是什么✔",
          "slug": "_21-synchronized-和-reentrantlock-区别是什么✔"
        },
        {
          "level": 3,
          "title": "22. synchronized的用法有哪些",
          "slug": "_22-synchronized的用法有哪些"
        },
        {
          "level": 3,
          "title": "23. Synchronized的作用有哪些（导致并发程序出现问题的根本原因是什么）",
          "slug": "_23-synchronized的作用有哪些-导致并发程序出现问题的根本原因是什么"
        },
        {
          "level": 3,
          "title": "24.  说一下 synchronized 底层实现原理",
          "slug": "_24-说一下-synchronized-底层实现原理"
        },
        {
          "level": 3,
          "title": "25. 多线程中 synchronized 锁升级的原理是什么",
          "slug": "_25-多线程中-synchronized-锁升级的原理是什么"
        },
        {
          "level": 3,
          "title": "26. synchronized 为什么是非公平锁？非公平体现在哪些地方",
          "slug": "_26-synchronized-为什么是非公平锁-非公平体现在哪些地方"
        },
        {
          "level": 3,
          "title": "27. JVM对synchronized的优化有哪些",
          "slug": "_27-jvm对synchronized的优化有哪些"
        },
        {
          "level": 3,
          "title": "28. synchronized 锁能降级吗",
          "slug": "_28-synchronized-锁能降级吗"
        },
        {
          "level": 3,
          "title": "29. ThreadLocal是什么✔",
          "slug": "_29-threadlocal是什么✔"
        },
        {
          "level": 3,
          "title": "30. ThreadLocal的实现原理✔",
          "slug": "_30-threadlocal的实现原理✔"
        },
        {
          "level": 3,
          "title": "31. 知道ThreadLocal 内存泄露问题吗",
          "slug": "_31-知道threadlocal-内存泄露问题吗"
        },
        {
          "level": 3,
          "title": "ThreadLocal有哪些使用场景✔",
          "slug": "threadlocal有哪些使用场景✔"
        },
        {
          "level": 3,
          "title": "32. 了解ReentrantLock吗✔",
          "slug": "_32-了解reentrantlock吗✔"
        },
        {
          "level": 3,
          "title": "33. ReadWriteLock是什么",
          "slug": "_33-readwritelock是什么"
        },
        {
          "level": 3,
          "title": "你谈谈 JMM（Java 内存模型）",
          "slug": "你谈谈-jmm-java-内存模型"
        },
        {
          "level": 3,
          "title": "写一个会导致死锁的程序",
          "slug": "写一个会导致死锁的程序"
        },
        {
          "level": 2,
          "title": "线程池",
          "slug": "线程池"
        },
        {
          "level": 3,
          "title": "34. 为什么要用线程池✔",
          "slug": "_34-为什么要用线程池✔"
        },
        {
          "level": 3,
          "title": "35. 执行execute()方法和submit()方法的区别是什么呢",
          "slug": "_35-执行execute-方法和submit-方法的区别是什么呢"
        },
        {
          "level": 3,
          "title": "36. 说下线程池核心参数✔",
          "slug": "_36-说下线程池核心参数✔"
        },
        {
          "level": 3,
          "title": "37. 线程池执行任务的流程（ 线程池底层ThreadPoolExecutor  实现原理）✔",
          "slug": "_37-线程池执行任务的流程-线程池底层threadpoolexecutor-实现原理-✔"
        },
        {
          "level": 3,
          "title": "38. 常用的JAVA线程池有哪几种类型",
          "slug": "_38-常用的java线程池有哪几种类型"
        },
        {
          "level": 3,
          "title": "39. 线程池常用的阻塞队列有哪些",
          "slug": "_39-线程池常用的阻塞队列有哪些"
        },
        {
          "level": 3,
          "title": "什么叫做阻塞队列的有界和无界✔",
          "slug": "什么叫做阻塞队列的有界和无界✔"
        },
        {
          "level": 3,
          "title": "40. 源码中线程池是怎么复用线程的✔",
          "slug": "_40-源码中线程池是怎么复用线程的✔"
        },
        {
          "level": 3,
          "title": "41. 如何合理配置线程池参数",
          "slug": "_41-如何合理配置线程池参数"
        },
        {
          "level": 3,
          "title": "如何确定核心线程数",
          "slug": "如何确定核心线程数"
        },
        {
          "level": 3,
          "title": "42. Executor和Executors的区别",
          "slug": "_42-executor和executors的区别"
        },
        {
          "level": 3,
          "title": "为什么不建议用Executors创建线程池",
          "slug": "为什么不建议用executors创建线程池"
        },
        {
          "level": 2,
          "title": "AQS",
          "slug": "aqs"
        },
        {
          "level": 3,
          "title": "43. 说一说什么是AQS✔",
          "slug": "_43-说一说什么是aqs✔"
        },
        {
          "level": 3,
          "title": "44. AQS使用了哪些设计模式",
          "slug": "_44-aqs使用了哪些设计模式"
        },
        {
          "level": 3,
          "title": "45. 了解AQS中同步队列的数据结构吗",
          "slug": "_45-了解aqs中同步队列的数据结构吗"
        },
        {
          "level": 3,
          "title": "AQS为什么采用双向链表，而不是单向链表",
          "slug": "aqs为什么采用双向链表-而不是单向链表"
        },
        {
          "level": 3,
          "title": "46. 了解AQS 对资源的共享方式吗",
          "slug": "_46-了解aqs-对资源的共享方式吗"
        },
        {
          "level": 3,
          "title": "47. AQS 组件了解吗",
          "slug": "_47-aqs-组件了解吗"
        },
        {
          "level": 2,
          "title": "Atomic 原子类",
          "slug": "atomic-原子类"
        },
        {
          "level": 3,
          "title": "48. 介绍一下 Atomic 原子类",
          "slug": "_48-介绍一下-atomic-原子类"
        },
        {
          "level": 3,
          "title": "49. JUC 包中的原子类是哪4类",
          "slug": "_49-juc-包中的原子类是哪4类"
        },
        {
          "level": 3,
          "title": "50. 简单介绍一下 AtomicInteger 类的原理",
          "slug": "_50-简单介绍一下-atomicinteger-类的原理"
        },
        {
          "level": 3,
          "title": "补充",
          "slug": "补充"
        },
        {
          "level": 3,
          "title": "51.为什么不建议使用Executors创建线程",
          "slug": "_51-为什么不建议使用executors创建线程"
        },
        {
          "level": 3,
          "title": "52.线程池有几种状态",
          "slug": "_52-线程池有几种状态"
        },
        {
          "level": 3,
          "title": "53.公平锁和非公平锁✔",
          "slug": "_53-公平锁和非公平锁✔"
        },
        {
          "level": 3,
          "title": "54.说说对线程安全的理解✔",
          "slug": "_54-说说对线程安全的理解✔"
        },
        {
          "level": 3,
          "title": "55.并发、并行、串行之间的区别✔",
          "slug": "_55-并发、并行、串行之间的区别✔"
        },
        {
          "level": 3,
          "title": "56.线程池为什么是先添加队列而不是先创建最大线程",
          "slug": "_56-线程池为什么是先添加队列而不是先创建最大线程"
        },
        {
          "level": 2,
          "title": "线程使用场景问题",
          "slug": "线程使用场景问题"
        },
        {
          "level": 3,
          "title": "如何控制某一个方法允许并发访问线程的数量",
          "slug": "如何控制某一个方法允许并发访问线程的数量"
        },
        {
          "level": 3,
          "title": "那该如何保证Java程序在多线程的情况下执行安全呢",
          "slug": "那该如何保证java程序在多线程的情况下执行安全呢"
        },
        {
          "level": 3,
          "title": "在项目中哪里用了多线程",
          "slug": "在项目中哪里用了多线程"
        },
        {
          "level": 2,
          "title": "Other",
          "slug": "other"
        },
        {
          "level": 3,
          "title": "编写一个基于线程安全的懒加载单例模式",
          "slug": "编写一个基于线程安全的懒加载单例模式"
        }
      ],
      "size": "34.10kb"
    },
    {
      "title": "Java集合",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/07-Java%E9%9B%86%E5%90%88.html",
      "relativePath": "handbook/Interview/07-Java集合.md",
      "key": "v-8d0c7d46",
      "path": "/handbook/Interview/07-Java%E9%9B%86%E5%90%88.html",
      "headers": [
        {
          "level": 2,
          "title": "算法复杂度",
          "slug": "算法复杂度"
        },
        {
          "level": 3,
          "title": "时间复杂度",
          "slug": "时间复杂度"
        },
        {
          "level": 3,
          "title": "空间复杂度",
          "slug": "空间复杂度"
        },
        {
          "level": 2,
          "title": "面试题",
          "slug": "面试题"
        },
        {
          "level": 3,
          "title": "1.常见的集合有哪些✔",
          "slug": "_1-常见的集合有哪些✔"
        },
        {
          "level": 3,
          "title": "2.线程安全的集合有哪些？线程不安全的呢",
          "slug": "_2-线程安全的集合有哪些-线程不安全的呢"
        },
        {
          "level": 3,
          "title": "3.ArrayList与LinkedList异同点✔",
          "slug": "_3-arraylist与linkedlist异同点✔"
        },
        {
          "level": 3,
          "title": "4.ArratList与Vector区别",
          "slug": "_4-arratlist与vector区别"
        },
        {
          "level": 3,
          "title": "5.说一说ArrayList的扩容机制",
          "slug": "_5-说一说arraylist的扩容机制"
        },
        {
          "level": 3,
          "title": "6.Array和ArrayList有什么区别？什么时候该用Array而不是ArrayList呢",
          "slug": "_6-array和arraylist有什么区别-什么时候该用array而不是arraylist呢"
        },
        {
          "level": 3,
          "title": "7.HashMap的底层数据结构是什么(1.7和1.8有什么区别)✔",
          "slug": "_7-hashmap的底层数据结构是什么-1-7和1-8有什么区别-✔"
        },
        {
          "level": 3,
          "title": "8.解决Hash冲突的办法有那些？HashMap用的那种",
          "slug": "_8-解决hash冲突的办法有那些-hashmap用的那种"
        },
        {
          "level": 3,
          "title": "9.为什么在解决hash冲突的时候，不直接用红黑树？而选择先用链表，再转红黑树",
          "slug": "_9-为什么在解决hash冲突的时候-不直接用红黑树-而选择先用链表-再转红黑树"
        },
        {
          "level": 3,
          "title": "10.HashMap默认加载因子是多少？为什么是0.75，不是0.6或者0.8",
          "slug": "_10-hashmap默认加载因子是多少-为什么是0-75-不是0-6或者0-8"
        },
        {
          "level": 3,
          "title": "11. HashMap 中 key 的存储索引是怎么计算的？",
          "slug": "_11-hashmap-中-key-的存储索引是怎么计算的"
        },
        {
          "level": 3,
          "title": "12. HashMap 的put方法流程 ✔",
          "slug": "_12-hashmap-的put方法流程-✔"
        },
        {
          "level": 3,
          "title": "13. HashMap 的扩容方式✔",
          "slug": "_13-hashmap-的扩容方式✔"
        },
        {
          "level": 3,
          "title": "通过hash计算后找到数组的下标，是如何找到的呢，你了解hashMap的寻址算法吗",
          "slug": "通过hash计算后找到数组的下标-是如何找到的呢-你了解hashmap的寻址算法吗"
        },
        {
          "level": 3,
          "title": "为何HashMap的数组长度一定是2的次幂",
          "slug": "为何hashmap的数组长度一定是2的次幂"
        },
        {
          "level": 3,
          "title": "你知道hashmap在1.7情况下的多线程死循环问题吗",
          "slug": "你知道hashmap在1-7情况下的多线程死循环问题吗"
        },
        {
          "level": 3,
          "title": "14. 一般用什么作为HashMap的key",
          "slug": "_14-一般用什么作为hashmap的key"
        },
        {
          "level": 3,
          "title": "15. HashMap为什么线程不安全",
          "slug": "_15-hashmap为什么线程不安全"
        },
        {
          "level": 3,
          "title": "16. ConcurrentHashMap 的实现原理是什么",
          "slug": "_16-concurrenthashmap-的实现原理是什么"
        },
        {
          "level": 3,
          "title": "17. ConcurrentHashMap 的 put 方法执行逻辑是什么",
          "slug": "_17-concurrenthashmap-的-put-方法执行逻辑是什么"
        },
        {
          "level": 3,
          "title": "18. ConcurrentHashMap 的 get 方法是否要加锁，为什么",
          "slug": "_18-concurrenthashmap-的-get-方法是否要加锁-为什么"
        },
        {
          "level": 3,
          "title": "19. get方法不需要加锁与volatile修饰的哈希桶有关吗",
          "slug": "_19-get方法不需要加锁与volatile修饰的哈希桶有关吗"
        },
        {
          "level": 3,
          "title": "20. ConcurrentHashMap 不支持 key 或者 value 为 null 的原因",
          "slug": "_20-concurrenthashmap-不支持-key-或者-value-为-null-的原因"
        },
        {
          "level": 3,
          "title": "21. ConcurrentHashMap 的并发度是多少",
          "slug": "_21-concurrenthashmap-的并发度是多少"
        },
        {
          "level": 3,
          "title": "22. ConcurrentHashMap 迭代器是强一致性还是弱一致性",
          "slug": "_22-concurrenthashmap-迭代器是强一致性还是弱一致性"
        },
        {
          "level": 3,
          "title": "23. JDK1.7与JDK1.8 中ConcurrentHashMap 的区别",
          "slug": "_23-jdk1-7与jdk1-8-中concurrenthashmap-的区别"
        },
        {
          "level": 3,
          "title": "24. ConcurrentHashMap 和Hashtable的效率哪个更高？为什么",
          "slug": "_24-concurrenthashmap-和hashtable的效率哪个更高-为什么"
        },
        {
          "level": 3,
          "title": "25. 说一下Hashtable的锁机制",
          "slug": "_25-说一下hashtable的锁机制"
        },
        {
          "level": 3,
          "title": "26. 多线程下安全的操作 map还有其他方法吗",
          "slug": "_26-多线程下安全的操作-map还有其他方法吗"
        },
        {
          "level": 3,
          "title": "27. HashMap 和 HashSet 区别 ✔",
          "slug": "_27-hashmap-和-hashset-区别-✔"
        },
        {
          "level": 3,
          "title": "HashMap和HashTable有何不同",
          "slug": "hashmap和hashtable有何不同"
        },
        {
          "level": 3,
          "title": "28. Collection框架中实现比较要怎么做",
          "slug": "_28-collection框架中实现比较要怎么做"
        },
        {
          "level": 3,
          "title": "29. Iterator 和 ListIterator 有什么区别",
          "slug": "_29-iterator-和-listiterator-有什么区别"
        },
        {
          "level": 3,
          "title": "30. 讲一讲快速失败(fail-fast)和安全失败(fail-safe)",
          "slug": "_30-讲一讲快速失败-fail-fast-和安全失败-fail-safe"
        },
        {
          "level": 3,
          "title": "谈谈ConcurrentHashMap的扩容机制✔",
          "slug": "谈谈concurrenthashmap的扩容机制✔"
        },
        {
          "level": 3,
          "title": "CopyOnWriteArrayList的底层原理是怎样的",
          "slug": "copyonwritearraylist的底层原理是怎样的"
        },
        {
          "level": 3,
          "title": "HashMap和HashTable有什么区别？底层实现是什么",
          "slug": "hashmap和hashtable有什么区别-底层实现是什么"
        },
        {
          "level": 3,
          "title": "ArrayList list=new\tArrayList(10)中的list扩容几次☆☆",
          "slug": "arraylist-list-newarraylist-10-中的list扩容几次☆☆"
        },
        {
          "level": 3,
          "title": "如何实现数组和List之间的转换☆☆",
          "slug": "如何实现数组和list之间的转换☆☆"
        },
        {
          "level": 3,
          "title": "ArrayList底层是如何实现的",
          "slug": "arraylist底层是如何实现的"
        },
        {
          "level": 3,
          "title": "ArrayList 和 LinkedList 不是线程安全的，在项目中是如何解决这个的线程安全问题的",
          "slug": "arraylist-和-linkedlist-不是线程安全的-在项目中是如何解决这个的线程安全问题的"
        },
        {
          "level": 3,
          "title": "HashMap的实现原理",
          "slug": "hashmap的实现原理"
        },
        {
          "level": 2,
          "title": "常见算法",
          "slug": "常见算法"
        },
        {
          "level": 3,
          "title": "查找算法",
          "slug": "查找算法"
        },
        {
          "level": 3,
          "title": "排序算法",
          "slug": "排序算法"
        },
        {
          "level": 3,
          "title": "综合练习",
          "slug": "综合练习"
        }
      ],
      "size": "39.09kb"
    },
    {
      "title": "Linux",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/10-Linux.html",
      "relativePath": "handbook/Interview/10-Linux.md",
      "key": "v-a3ca302e",
      "path": "/handbook/Interview/10-Linux.html",
      "headers": [
        {
          "level": 2,
          "title": "Bigdata-Basic",
          "slug": "bigdata-basic"
        },
        {
          "level": 3,
          "title": "1.常用命令",
          "slug": "_1-常用命令"
        },
        {
          "level": 3,
          "title": "2.高级命令",
          "slug": "_2-高级命令"
        },
        {
          "level": 3,
          "title": "3.vi命令",
          "slug": "_3-vi命令"
        },
        {
          "level": 3,
          "title": "4.脚本",
          "slug": "_4-脚本"
        },
        {
          "level": 3,
          "title": "5.单引号、双引号",
          "slug": "_5-单引号、双引号"
        },
        {
          "level": 3,
          "title": "6.Linux是什么操作系统",
          "slug": "_6-linux是什么操作系统"
        },
        {
          "level": 3,
          "title": "7.服务器怎么监控的？——内存、磁盘、CPU。。。",
          "slug": "_7-服务器怎么监控的-内存、磁盘、cpu。。。"
        },
        {
          "level": 3,
          "title": "8. Shell中提交了一个脚本，进程号已经不知道了，但是需要kill掉这个进程，怎么操作",
          "slug": "_8-shell中提交了一个脚本-进程号已经不知道了-但是需要kill掉这个进程-怎么操作"
        }
      ],
      "size": "4.10kb"
    },
    {
      "title": "JVM",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/09-JVM.html",
      "relativePath": "handbook/Interview/09-JVM.md",
      "key": "v-1ab77cc9",
      "path": "/handbook/Interview/09-JVM.html",
      "headers": [
        {
          "level": 2,
          "title": "JVM组成",
          "slug": "jvm组成"
        },
        {
          "level": 3,
          "title": "1. 什么是JVM内存结构✔",
          "slug": "_1-什么是jvm内存结构✔"
        },
        {
          "level": 3,
          "title": "JVM运行流程",
          "slug": "jvm运行流程"
        },
        {
          "level": 3,
          "title": "什么是程序计数器✔",
          "slug": "什么是程序计数器✔"
        },
        {
          "level": 3,
          "title": "什么是Java堆✔",
          "slug": "什么是java堆✔"
        },
        {
          "level": 3,
          "title": "什么是虚拟机栈✔",
          "slug": "什么是虚拟机栈✔"
        },
        {
          "level": 3,
          "title": "解释一下方法区",
          "slug": "解释一下方法区"
        },
        {
          "level": 3,
          "title": "介绍一下直接内存",
          "slug": "介绍一下直接内存"
        },
        {
          "level": 3,
          "title": "2. 什么是JVM内存模型",
          "slug": "_2-什么是jvm内存模型"
        },
        {
          "level": 3,
          "title": "JVM 内存模型中，为什么要区分新生代和年老代，对于新生代，为什么又要区分eden 区survial区✔",
          "slug": "jvm-内存模型中-为什么要区分新生代和年老代-对于新生代-为什么又要区分eden-区survial区✔"
        },
        {
          "level": 3,
          "title": "3. heap 和stack 有什么区别✔",
          "slug": "_3-heap-和stack-有什么区别✔"
        },
        {
          "level": 3,
          "title": "4. 什么情况下会发生栈内存溢出",
          "slug": "_4-什么情况下会发生栈内存溢出"
        },
        {
          "level": 3,
          "title": "5. 谈谈对 OOM 的认识？如何排查 OOM 的问题",
          "slug": "_5-谈谈对-oom-的认识-如何排查-oom-的问题"
        },
        {
          "level": 3,
          "title": "6. 谈谈 JVM 中的常量池",
          "slug": "_6-谈谈-jvm-中的常量池"
        },
        {
          "level": 3,
          "title": "你理解的JVM 原理",
          "slug": "你理解的jvm-原理"
        },
        {
          "level": 2,
          "title": "垃圾回收",
          "slug": "垃圾回收"
        },
        {
          "level": 3,
          "title": "7. 如何判断一个对象是否存活？   （ GC如何判断对象可以被回收  ）✔",
          "slug": "_7-如何判断一个对象是否存活-gc如何判断对象可以被回收-✔"
        },
        {
          "level": 3,
          "title": "8. 强引用、软引用、弱引用、虚引用是什么，有什么区别✔",
          "slug": "_8-强引用、软引用、弱引用、虚引用是什么-有什么区别✔"
        },
        {
          "level": 3,
          "title": "9. 被引用的对象就一定能存活吗✔",
          "slug": "_9-被引用的对象就一定能存活吗✔"
        },
        {
          "level": 3,
          "title": "10. Java中的垃圾回收算法有哪些✔",
          "slug": "_10-java中的垃圾回收算法有哪些✔"
        },
        {
          "level": 3,
          "title": "11. 有哪几种垃圾回收器，各自的优缺点是什么✔",
          "slug": "_11-有哪几种垃圾回收器-各自的优缺点是什么✔"
        },
        {
          "level": 3,
          "title": "12. 详细说一下CMS的回收过程？CMS的问题是什么",
          "slug": "_12-详细说一下cms的回收过程-cms的问题是什么"
        },
        {
          "level": 3,
          "title": "13. 详细说一下G1的回收过程",
          "slug": "_13-详细说一下g1的回收过程"
        },
        {
          "level": 3,
          "title": "14. JVM中一次完整的GC是什么样子的✔",
          "slug": "_14-jvm中一次完整的gc是什么样子的✔"
        },
        {
          "level": 3,
          "title": "15. Minor GC 和 Full GC 有什么不同呢",
          "slug": "_15-minor-gc-和-full-gc-有什么不同呢"
        },
        {
          "level": 3,
          "title": "16. 介绍下空间分配担保原则",
          "slug": "_16-介绍下空间分配担保原则"
        },
        {
          "level": 2,
          "title": "类加载器",
          "slug": "类加载器"
        },
        {
          "level": 3,
          "title": "17. 什么是类加载？类加载的过程",
          "slug": "_17-什么是类加载-类加载的过程"
        },
        {
          "level": 3,
          "title": "18. 什么是类加载器，常见的类加载器有哪些",
          "slug": "_18-什么是类加载器-常见的类加载器有哪些"
        },
        {
          "level": 3,
          "title": "19. 什么是双亲委派模型✔",
          "slug": "_19-什么是双亲委派模型✔"
        },
        {
          "level": 3,
          "title": "为什么需要双亲委派模型✔",
          "slug": "为什么需要双亲委派模型✔"
        },
        {
          "level": 3,
          "title": "20. 列举一些你知道的打破双亲委派机制的例子，为什么要打破",
          "slug": "_20-列举一些你知道的打破双亲委派机制的例子-为什么要打破"
        },
        {
          "level": 2,
          "title": "JVM调优",
          "slug": "jvm调优"
        },
        {
          "level": 3,
          "title": "21. 说一下 JVM 调优的命令✔",
          "slug": "_21-说一下-jvm-调优的命令✔"
        },
        {
          "level": 3,
          "title": "补充",
          "slug": "补充"
        },
        {
          "level": 3,
          "title": "JVM中那些是线程共享区",
          "slug": "jvm中那些是线程共享区"
        },
        {
          "level": 3,
          "title": "你们项⽬如何排查JVM问题  （调优命令）",
          "slug": "你们项目如何排查jvm问题-调优命令"
        },
        {
          "level": 3,
          "title": "什么是STW",
          "slug": "什么是stw"
        }
      ],
      "size": "16.80kb"
    },
    {
      "title": "Hive",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/12-Hive.html",
      "relativePath": "handbook/Interview/12-Hive.md",
      "key": "v-50b668f2",
      "path": "/handbook/Interview/12-Hive.html",
      "headers": [
        {
          "level": 2,
          "title": "Hive面试题（一）",
          "slug": "hive面试题-一"
        },
        {
          "level": 3,
          "title": "1.Hive内部表和外部表的区别✔",
          "slug": "_1-hive内部表和外部表的区别✔"
        },
        {
          "level": 3,
          "title": "2.Hive有索引吗",
          "slug": "_2-hive有索引吗"
        },
        {
          "level": 3,
          "title": "3.运维如何对hive进行调度",
          "slug": "_3-运维如何对hive进行调度"
        },
        {
          "level": 3,
          "title": "4.ORC、Parquet等列式存储的优点",
          "slug": "_4-orc、parquet等列式存储的优点"
        },
        {
          "level": 3,
          "title": "5.数据建模用的哪些模型✔",
          "slug": "_5-数据建模用的哪些模型✔"
        },
        {
          "level": 3,
          "title": "6.为什么要对数据仓库分层",
          "slug": "_6-为什么要对数据仓库分层"
        },
        {
          "level": 3,
          "title": "7.使用过Hive解析JSON串吗",
          "slug": "_7-使用过hive解析json串吗"
        },
        {
          "level": 3,
          "title": "8.sort by 和 order by 的区别",
          "slug": "_8-sort-by-和-order-by-的区别"
        },
        {
          "level": 3,
          "title": "10.Hive 小文件过多怎么解决",
          "slug": "_10-hive-小文件过多怎么解决"
        },
        {
          "level": 3,
          "title": "11.Hive优化有哪些✔",
          "slug": "_11-hive优化有哪些✔"
        },
        {
          "level": 3,
          "title": "12.Hive的HSQL转换为MapReduce的过程✔",
          "slug": "_12-hive的hsql转换为mapreduce的过程✔"
        },
        {
          "level": 3,
          "title": "13.Hive底层与数据库交互原理\t（hive架构）",
          "slug": "_13-hive底层与数据库交互原理-hive架构"
        },
        {
          "level": 3,
          "title": "14.Hive的两张表关联，使用MapReduce怎么实现",
          "slug": "_14-hive的两张表关联-使用mapreduce怎么实现"
        },
        {
          "level": 3,
          "title": "15.请谈一下Hive的特点，Hive和RDBMS有什么异同✔",
          "slug": "_15-请谈一下hive的特点-hive和rdbms有什么异同✔"
        },
        {
          "level": 3,
          "title": "16.请说明hive中 Sort By，Order By，Cluster By，Distrbute By各代表什么意思",
          "slug": "_16-请说明hive中-sort-by-order-by-cluster-by-distrbute-by各代表什么意思"
        },
        {
          "level": 3,
          "title": "17.Hive有哪些方式保存元数据，各有哪些特点",
          "slug": "_17-hive有哪些方式保存元数据-各有哪些特点"
        },
        {
          "level": 3,
          "title": "18.Hive 中的压缩格式TextFile、SequenceFile、RCfile 、ORCfile各有什么区别",
          "slug": "_18-hive-中的压缩格式textfile、sequencefile、rcfile-、orcfile各有什么区别"
        },
        {
          "level": 3,
          "title": "19.所有的Hive任务都会有MapReduce的执行吗",
          "slug": "_19-所有的hive任务都会有mapreduce的执行吗"
        },
        {
          "level": 3,
          "title": "20.写出hive中split、coalesce及collect_list函数的用法（可举例）",
          "slug": "_20-写出hive中split、coalesce及collect-list函数的用法-可举例"
        },
        {
          "level": 3,
          "title": "21.Fetch抓取",
          "slug": "_21-fetch抓取"
        },
        {
          "level": 3,
          "title": "22.本地模式",
          "slug": "_22-本地模式"
        },
        {
          "level": 3,
          "title": "23.表的优化",
          "slug": "_23-表的优化"
        },
        {
          "level": 3,
          "title": "24.数据倾斜✔",
          "slug": "_24-数据倾斜✔"
        },
        {
          "level": 3,
          "title": "25.系统函数",
          "slug": "_25-系统函数"
        },
        {
          "level": 3,
          "title": "26.自定义UDF、UDTF函数",
          "slug": "_26-自定义udf、udtf函数"
        },
        {
          "level": 3,
          "title": "27.窗口函数",
          "slug": "_27-窗口函数"
        },
        {
          "level": 3,
          "title": "28.Union与Union all区别",
          "slug": "_28-union与union-all区别"
        },
        {
          "level": 2,
          "title": "Hive面试题（二）",
          "slug": "hive面试题-二"
        }
      ],
      "size": "11.67kb"
    },
    {
      "title": "Hadoop",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/11-Hadoop.html",
      "relativePath": "handbook/Interview/11-Hadoop.md",
      "key": "v-0908641b",
      "path": "/handbook/Interview/11-Hadoop.html",
      "headers": [
        {
          "level": 2,
          "title": "入门",
          "slug": "入门"
        },
        {
          "level": 3,
          "title": "1.集群的最主要瓶颈",
          "slug": "_1-集群的最主要瓶颈"
        },
        {
          "level": 3,
          "title": "2.Hadoop运行模式✔",
          "slug": "_2-hadoop运行模式✔"
        },
        {
          "level": 3,
          "title": "3.Hadoop生态圈的组件并做简要描述",
          "slug": "_3-hadoop生态圈的组件并做简要描述"
        },
        {
          "level": 3,
          "title": "4.解释Hadoop和Hadoop生态系统两个概念",
          "slug": "_4-解释hadoop和hadoop生态系统两个概念"
        },
        {
          "level": 3,
          "title": "5.请列出正常工作的Hadoop集群中需要启动那些进程，它们的作用分别是什么✔",
          "slug": "_5-请列出正常工作的hadoop集群中需要启动那些进程-它们的作用分别是什么✔"
        },
        {
          "level": 3,
          "title": "6.Hadoop常用端口号✔",
          "slug": "_6-hadoop常用端口号✔"
        },
        {
          "level": 3,
          "title": "核心配置文件✔",
          "slug": "核心配置文件✔"
        },
        {
          "level": 3,
          "title": "Hadoop宕机",
          "slug": "hadoop宕机"
        },
        {
          "level": 2,
          "title": "HDFS",
          "slug": "hdfs"
        },
        {
          "level": 3,
          "title": "7.hdfs数据读写流程✔",
          "slug": "_7-hdfs数据读写流程✔"
        },
        {
          "level": 3,
          "title": "8.HDFS在读取文件的时候，如果其中一个块突然损坏了怎么办",
          "slug": "_8-hdfs在读取文件的时候-如果其中一个块突然损坏了怎么办"
        },
        {
          "level": 3,
          "title": "9.HDFS在上传文件的时候，如果其中一个DataNode突然挂掉了怎么办",
          "slug": "_9-hdfs在上传文件的时候-如果其中一个datanode突然挂掉了怎么办"
        },
        {
          "level": 3,
          "title": "10.NameNode在启动的时候会做哪些操作✔",
          "slug": "_10-namenode在启动的时候会做哪些操作✔"
        },
        {
          "level": 3,
          "title": "11.SecondaryNameNode了解吗，它的工作机制是怎样的(数据持久化)✔",
          "slug": "_11-secondarynamenode了解吗-它的工作机制是怎样的-数据持久化-✔"
        },
        {
          "level": 3,
          "title": "12.SecondaryNameNode不能恢复NameNode的全部数据，那如何保证NameNode数据存储安全(Ha高可用)",
          "slug": "_12-secondarynamenode不能恢复namenode的全部数据-那如何保证namenode数据存储安全-ha高可用"
        },
        {
          "level": 3,
          "title": "13.在NameNodeHa中，会出现脑裂问题吗？怎么解决脑裂",
          "slug": "_13-在namenodeha中-会出现脑裂问题吗-怎么解决脑裂"
        },
        {
          "level": 3,
          "title": "14.小文件过多会有什么危害，如何避免✔",
          "slug": "_14-小文件过多会有什么危害-如何避免✔"
        },
        {
          "level": 3,
          "title": "15.请说下HDFS的组织架构✔",
          "slug": "_15-请说下hdfs的组织架构✔"
        },
        {
          "level": 3,
          "title": "16.HDFS中的block默认保存几份✔",
          "slug": "_16-hdfs中的block默认保存几份✔"
        },
        {
          "level": 3,
          "title": "17.HSDS默认BlockSize是多大✔",
          "slug": "_17-hsds默认blocksize是多大✔"
        },
        {
          "level": 3,
          "title": "HDFS的NameNode内存",
          "slug": "hdfs的namenode内存"
        },
        {
          "level": 3,
          "title": "纠删码（CPU资源换取存储空间）计算 换 空间",
          "slug": "纠删码-cpu资源换取存储空间-计算-换-空间"
        },
        {
          "level": 3,
          "title": "异构存储（不同盘存不同数据，根据实际数据情况）",
          "slug": "异构存储-不同盘存不同数据-根据实际数据情况"
        },
        {
          "level": 3,
          "title": "HDFS能不能并发写入",
          "slug": "hdfs能不能并发写入"
        },
        {
          "level": 3,
          "title": "HDFS的数据压缩算法",
          "slug": "hdfs的数据压缩算法"
        },
        {
          "level": 2,
          "title": "MapReduce",
          "slug": "mapreduce"
        },
        {
          "level": 3,
          "title": "请说下MR中shuffle阶段✔",
          "slug": "请说下mr中shuffle阶段✔"
        },
        {
          "level": 3,
          "title": "shuffle阶段是数据压缩机制了解吗✔",
          "slug": "shuffle阶段是数据压缩机制了解吗✔"
        },
        {
          "level": 3,
          "title": "21.在写MR时，什么情况下可以使用规约",
          "slug": "_21-在写mr时-什么情况下可以使用规约"
        },
        {
          "level": 3,
          "title": "22.谈谈Hadoop序列化和反序列化及自定义bean对象实现序列化",
          "slug": "_22-谈谈hadoop序列化和反序列化及自定义bean对象实现序列化"
        },
        {
          "level": 3,
          "title": "23.FileInputFormat切片机制",
          "slug": "_23-fileinputformat切片机制"
        },
        {
          "level": 3,
          "title": "24.如何判定一个job的map和reduce的数量",
          "slug": "_24-如何判定一个job的map和reduce的数量"
        },
        {
          "level": 3,
          "title": "25.Maptask的个数由什么决定",
          "slug": "_25-maptask的个数由什么决定"
        },
        {
          "level": 3,
          "title": "26.MapTask和ReduceTask工作机制（也可回答MapReduce工作原理）✔",
          "slug": "_26-maptask和reducetask工作机制-也可回答mapreduce工作原理-✔"
        },
        {
          "level": 3,
          "title": "27.描述mapReduce有几种排序及排序发生的阶段",
          "slug": "_27-描述mapreduce有几种排序及排序发生的阶段"
        },
        {
          "level": 3,
          "title": "28.描述mapReduce中combiner的作用是什么，一般使用情景，哪些情况不需要，及和reduce的区别",
          "slug": "_28-描述mapreduce中combiner的作用是什么-一般使用情景-哪些情况不需要-及和reduce的区别"
        },
        {
          "level": 3,
          "title": "29.如果没有定义partitioner，那数据在被送达reducer前是如何被分",
          "slug": "_29-如果没有定义partitioner-那数据在被送达reducer前是如何被分"
        },
        {
          "level": 3,
          "title": "30.MapReduce出现单点负载多大，怎么负载平衡",
          "slug": "_30-mapreduce出现单点负载多大-怎么负载平衡"
        },
        {
          "level": 3,
          "title": "31.Hadoop的缓存机制（Distributedcache）",
          "slug": "_31-hadoop的缓存机制-distributedcache"
        },
        {
          "level": 3,
          "title": "32.如何使用mapReduce实现两个表的join",
          "slug": "_32-如何使用mapreduce实现两个表的join"
        },
        {
          "level": 3,
          "title": "33.什么样的计算不能用mr来提速",
          "slug": "_33-什么样的计算不能用mr来提速"
        },
        {
          "level": 3,
          "title": "34.ETL是哪三个单词的缩写",
          "slug": "_34-etl是哪三个单词的缩写"
        },
        {
          "level": 3,
          "title": "MapReduce2.0容错性",
          "slug": "mapreduce2-0容错性"
        },
        {
          "level": 3,
          "title": "MapReduce跑得慢的原因",
          "slug": "mapreduce跑得慢的原因"
        },
        {
          "level": 3,
          "title": "MapReduce优化方法(图)✔",
          "slug": "mapreduce优化方法-图-✔"
        },
        {
          "level": 2,
          "title": "Yarn",
          "slug": "yarn"
        },
        {
          "level": 3,
          "title": "35.Yarn集群的架构和工作原理知道多少✔",
          "slug": "_35-yarn集群的架构和工作原理知道多少✔"
        },
        {
          "level": 3,
          "title": "36.YARN的任务提交流程是怎样的✔",
          "slug": "_36-yarn的任务提交流程是怎样的✔"
        },
        {
          "level": 3,
          "title": "37.YARN的资源调度三种模型了解吗✔",
          "slug": "_37-yarn的资源调度三种模型了解吗✔"
        },
        {
          "level": 3,
          "title": "38.简述hadoop1与hadoop2的架构异同",
          "slug": "_38-简述hadoop1与hadoop2的架构异同"
        },
        {
          "level": 3,
          "title": "39.为什么会产生yarn,它解决了什么问题，有什么优势",
          "slug": "_39-为什么会产生yarn-它解决了什么问题-有什么优势"
        },
        {
          "level": 3,
          "title": "Yarn调优参数✔",
          "slug": "yarn调优参数✔"
        }
      ],
      "size": "15.13kb"
    },
    {
      "title": "初识微服务",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/01-%E5%88%9D%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",
      "relativePath": "handbook/Learn/Microservice/01-初识微服务.md",
      "key": "v-427974b4",
      "path": "/handbook/Learn/Microservice/01-%E5%88%9D%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 微服务概述",
          "slug": "_1-微服务概述"
        },
        {
          "level": 3,
          "title": "1.1 服务架构演变",
          "slug": "_1-1-服务架构演变"
        },
        {
          "level": 3,
          "title": "1.2 SpringCloud",
          "slug": "_1-2-springcloud"
        },
        {
          "level": 2,
          "title": "2. 微服务拆分案例",
          "slug": "_2-微服务拆分案例"
        },
        {
          "level": 3,
          "title": "2.1 服务拆分原则",
          "slug": "_2-1-服务拆分原则"
        },
        {
          "level": 3,
          "title": "2.2 服务拆分示例",
          "slug": "_2-2-服务拆分示例"
        },
        {
          "level": 3,
          "title": "2.3 实现远程调用案例",
          "slug": "_2-3-实现远程调用案例"
        },
        {
          "level": 3,
          "title": "2.4 提供者与消费者",
          "slug": "_2-4-提供者与消费者"
        }
      ],
      "size": "16.86kb"
    },
    {
      "title": "Eureka注册中心",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/02-Eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "relativePath": "handbook/Learn/Microservice/02-Eureka注册中心.md",
      "key": "v-52a67685",
      "path": "/handbook/Learn/Microservice/02-Eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "headers": [
        {
          "level": 2,
          "title": "1. Eureka的结构和作用",
          "slug": "_1-eureka的结构和作用"
        },
        {
          "level": 2,
          "title": "2. 搭建EurekaServer",
          "slug": "_2-搭建eurekaserver"
        },
        {
          "level": 2,
          "title": "3. 服务注册",
          "slug": "_3-服务注册"
        },
        {
          "level": 2,
          "title": "4. 服务发现",
          "slug": "_4-服务发现"
        }
      ],
      "size": "5.73kb"
    },
    {
      "title": "Ribbon负载均衡",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/03-Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html",
      "relativePath": "handbook/Learn/Microservice/03-Ribbon负载均衡.md",
      "key": "v-aa180540",
      "path": "/handbook/Learn/Microservice/03-Ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 负载均衡原理",
          "slug": "_1-负载均衡原理"
        },
        {
          "level": 2,
          "title": "2. 源码跟踪",
          "slug": "_2-源码跟踪"
        },
        {
          "level": 3,
          "title": "2.1 LoadBalancerInterceptor",
          "slug": "_2-1-loadbalancerinterceptor"
        },
        {
          "level": 3,
          "title": "2.2 LoadBalancerClient",
          "slug": "_2-2-loadbalancerclient"
        },
        {
          "level": 3,
          "title": "2.3 负载均衡策略IRule",
          "slug": "_2-3-负载均衡策略irule"
        },
        {
          "level": 3,
          "title": "2.4 总结",
          "slug": "_2-4-总结"
        },
        {
          "level": 2,
          "title": "3. 负载均衡策略",
          "slug": "_3-负载均衡策略"
        },
        {
          "level": 3,
          "title": "3.1 负载均衡策略",
          "slug": "_3-1-负载均衡策略"
        },
        {
          "level": 3,
          "title": "3.2 自定义负载均衡策略",
          "slug": "_3-2-自定义负载均衡策略"
        },
        {
          "level": 2,
          "title": "4. 饥饿加载",
          "slug": "_4-饥饿加载"
        }
      ],
      "size": "5.67kb"
    },
    {
      "title": "Nacos注册中心",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/04-Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "relativePath": "handbook/Learn/Microservice/04-Nacos注册中心.md",
      "key": "v-9902bf22",
      "path": "/handbook/Learn/Microservice/04-Nacos%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 认识和安装Nacos",
          "slug": "_1-认识和安装nacos"
        },
        {
          "level": 3,
          "title": "1. Windows安装",
          "slug": "_1-windows安装"
        },
        {
          "level": 3,
          "title": "2. Linux安装",
          "slug": "_2-linux安装"
        },
        {
          "level": 3,
          "title": "3.Nacos依赖",
          "slug": "_3-nacos依赖"
        },
        {
          "level": 2,
          "title": "2. 服务注册到Nacos",
          "slug": "_2-服务注册到nacos"
        },
        {
          "level": 2,
          "title": "3. 服务分级存储模型",
          "slug": "_3-服务分级存储模型"
        },
        {
          "level": 3,
          "title": "3.1 给user-service配置集群",
          "slug": "_3-1-给user-service配置集群"
        },
        {
          "level": 3,
          "title": "3.2 同集群优先的负载均衡",
          "slug": "_3-2-同集群优先的负载均衡"
        },
        {
          "level": 2,
          "title": "4. 权重配置",
          "slug": "_4-权重配置"
        },
        {
          "level": 2,
          "title": "5. 环境隔离",
          "slug": "_5-环境隔离"
        },
        {
          "level": 3,
          "title": "5.1 创建namespace",
          "slug": "_5-1-创建namespace"
        },
        {
          "level": 3,
          "title": "5.2 给微服务配置namespace",
          "slug": "_5-2-给微服务配置namespace"
        },
        {
          "level": 2,
          "title": "6. Nacos和Rureka的区别",
          "slug": "_6-nacos和rureka的区别"
        }
      ],
      "size": "6.84kb"
    },
    {
      "title": "Feign远程调用",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/06-Feign%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8.html",
      "relativePath": "handbook/Learn/Microservice/06-Feign远程调用.md",
      "key": "v-18f1d1e4",
      "path": "/handbook/Learn/Microservice/06-Feign%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "1. Feign替代RestTemplate",
          "slug": "_1-feign替代resttemplate"
        },
        {
          "level": 3,
          "title": "1）引入依赖",
          "slug": "_1-引入依赖"
        },
        {
          "level": 3,
          "title": "2）添加注解",
          "slug": "_2-添加注解"
        },
        {
          "level": 3,
          "title": "3）编写Feign的客户端",
          "slug": "_3-编写feign的客户端"
        },
        {
          "level": 3,
          "title": "4）测试",
          "slug": "_4-测试"
        },
        {
          "level": 3,
          "title": "5）总结",
          "slug": "_5-总结"
        },
        {
          "level": 2,
          "title": "2. 自定义配置",
          "slug": "_2-自定义配置"
        },
        {
          "level": 3,
          "title": "2.1 配置文件方式",
          "slug": "_2-1-配置文件方式"
        },
        {
          "level": 3,
          "title": "2.2 Java代码方式",
          "slug": "_2-2-java代码方式"
        },
        {
          "level": 2,
          "title": "3. Feign使用优化",
          "slug": "_3-feign使用优化"
        },
        {
          "level": 2,
          "title": "4. 最佳实践",
          "slug": "_4-最佳实践"
        },
        {
          "level": 3,
          "title": "4.1 继承方式",
          "slug": "_4-1-继承方式"
        },
        {
          "level": 3,
          "title": "4.2 抽取方式",
          "slug": "_4-2-抽取方式"
        },
        {
          "level": 3,
          "title": "4.3 实现基于抽取的最佳实践",
          "slug": "_4-3-实现基于抽取的最佳实践"
        }
      ],
      "size": "9.29kb"
    },
    {
      "title": "Nacos配置管理",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/05-Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.html",
      "relativePath": "handbook/Learn/Microservice/05-Nacos配置管理.md",
      "key": "v-83ac88b4",
      "path": "/handbook/Learn/Microservice/05-Nacos%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 统一配置管理",
          "slug": "_1-统一配置管理"
        },
        {
          "level": 3,
          "title": "1.1 在nacos中添加配置文件",
          "slug": "_1-1-在nacos中添加配置文件"
        },
        {
          "level": 3,
          "title": "1.2 从微服务拉取配置",
          "slug": "_1-2-从微服务拉取配置"
        },
        {
          "level": 2,
          "title": "2. 配置热更新",
          "slug": "_2-配置热更新"
        },
        {
          "level": 3,
          "title": "2.1 方式一",
          "slug": "_2-1-方式一"
        },
        {
          "level": 3,
          "title": "2.2 方式二",
          "slug": "_2-2-方式二"
        },
        {
          "level": 2,
          "title": "3. 配置共享",
          "slug": "_3-配置共享"
        },
        {
          "level": 3,
          "title": "1)  添加一个环境共享配置",
          "slug": "_1-添加一个环境共享配置"
        },
        {
          "level": 3,
          "title": "2) 在user-service读取共享配置",
          "slug": "_2-在user-service读取共享配置"
        },
        {
          "level": 3,
          "title": "3) 运行两个 userApplication，使用不同的profile",
          "slug": "_3-运行两个-userapplication-使用不同的profile"
        },
        {
          "level": 3,
          "title": "4) 配置共享的优先级",
          "slug": "_4-配置共享的优先级"
        },
        {
          "level": 3,
          "title": "5) 总结",
          "slug": "_5-总结"
        },
        {
          "level": 3,
          "title": "6) 补充",
          "slug": "_6-补充"
        },
        {
          "level": 2,
          "title": "4. 搭建Nacos集群",
          "slug": "_4-搭建nacos集群"
        },
        {
          "level": 3,
          "title": "初始化数据库",
          "slug": "初始化数据库"
        },
        {
          "level": 3,
          "title": "下载nacos",
          "slug": "下载nacos"
        },
        {
          "level": 3,
          "title": "启动",
          "slug": "启动"
        },
        {
          "level": 3,
          "title": "nginx反向代理",
          "slug": "nginx反向代理"
        },
        {
          "level": 3,
          "title": "优化",
          "slug": "优化"
        }
      ],
      "size": "21.83kb"
    },
    {
      "title": "Gateway服务网关",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/07-Gateway%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3.html",
      "relativePath": "handbook/Learn/Microservice/07-Gateway服务网关.md",
      "key": "v-34da96de",
      "path": "/handbook/Learn/Microservice/07-Gateway%E6%9C%8D%E5%8A%A1%E7%BD%91%E5%85%B3.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 为什么需要网关",
          "slug": "_1-为什么需要网关"
        },
        {
          "level": 2,
          "title": "2. gateway快速入门",
          "slug": "_2-gateway快速入门"
        },
        {
          "level": 2,
          "title": "3. 断言工厂",
          "slug": "_3-断言工厂"
        },
        {
          "level": 2,
          "title": "4. 过滤器工厂",
          "slug": "_4-过滤器工厂"
        },
        {
          "level": 3,
          "title": "4.1 路由过滤器的种类",
          "slug": "_4-1-路由过滤器的种类"
        },
        {
          "level": 3,
          "title": "4.2 请求头过滤器",
          "slug": "_4-2-请求头过滤器"
        },
        {
          "level": 3,
          "title": "4.3 默认过滤器",
          "slug": "_4-3-默认过滤器"
        },
        {
          "level": 3,
          "title": "4.4 总结",
          "slug": "_4-4-总结"
        },
        {
          "level": 2,
          "title": "5. 全局过滤器",
          "slug": "_5-全局过滤器"
        },
        {
          "level": 3,
          "title": "5.1 全局过滤器作用",
          "slug": "_5-1-全局过滤器作用"
        },
        {
          "level": 3,
          "title": "5.2 自定义全局过滤器",
          "slug": "_5-2-自定义全局过滤器"
        },
        {
          "level": 3,
          "title": "5.3 过滤器执行顺序",
          "slug": "_5-3-过滤器执行顺序"
        },
        {
          "level": 2,
          "title": "6. 跨域问题",
          "slug": "_6-跨域问题"
        },
        {
          "level": 3,
          "title": "6.1 什么是跨域问题",
          "slug": "_6-1-什么是跨域问题"
        },
        {
          "level": 3,
          "title": "6.2 解决跨域问题",
          "slug": "_6-2-解决跨域问题"
        }
      ],
      "size": "10.16kb"
    },
    {
      "title": "Docker-介绍及安装",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/08-Docker-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.html",
      "relativePath": "handbook/Learn/Microservice/08-Docker-介绍及安装.md",
      "key": "v-2dc71444",
      "path": "/handbook/Learn/Microservice/08-Docker-%E4%BB%8B%E7%BB%8D%E5%8F%8A%E5%AE%89%E8%A3%85.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 初始Docker",
          "slug": "_1-初始docker"
        },
        {
          "level": 3,
          "title": "1.1 Docker与虚拟机的区别",
          "slug": "_1-1-docker与虚拟机的区别"
        },
        {
          "level": 3,
          "title": "1.2 Docker架构",
          "slug": "_1-2-docker架构"
        },
        {
          "level": 2,
          "title": "2. 安装",
          "slug": "_2-安装"
        },
        {
          "level": 3,
          "title": "2.1 CentOS安装Docker",
          "slug": "_2-1-centos安装docker"
        }
      ],
      "size": "2.59kb"
    },
    {
      "title": "Docker-补充",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/10-Docker-%E9%AB%98%E7%BA%A7.html",
      "relativePath": "handbook/Learn/Microservice/10-Docker-高级.md",
      "key": "v-0e38f5a8",
      "path": "/handbook/Learn/Microservice/10-Docker-%E9%AB%98%E7%BA%A7.html",
      "headers": [
        {
          "level": 2,
          "title": "Docker-补充",
          "slug": "docker-补充"
        }
      ],
      "size": "0.01kb"
    },
    {
      "title": "Docker-基础",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/09-Docker-%E5%9F%BA%E7%A1%80.html",
      "relativePath": "handbook/Learn/Microservice/09-Docker-基础.md",
      "key": "v-94e74a80",
      "path": "/handbook/Learn/Microservice/09-Docker-%E5%9F%BA%E7%A1%80.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 镜像操作",
          "slug": "_1-镜像操作"
        },
        {
          "level": 3,
          "title": "1.1 镜像名称",
          "slug": "_1-1-镜像名称"
        },
        {
          "level": 3,
          "title": "1.2 镜像命令",
          "slug": "_1-2-镜像命令"
        },
        {
          "level": 3,
          "title": "1.3 创建Nginx镜像案例",
          "slug": "_1-3-创建nginx镜像案例"
        },
        {
          "level": 2,
          "title": "2. 容器操作",
          "slug": "_2-容器操作"
        },
        {
          "level": 3,
          "title": "2.1 容器相关命令",
          "slug": "_2-1-容器相关命令"
        },
        {
          "level": 3,
          "title": "2.2 案例-启动Nginx容器",
          "slug": "_2-2-案例-启动nginx容器"
        },
        {
          "level": 3,
          "title": "2.3 案例-运行Redis容器",
          "slug": "_2-3-案例-运行redis容器"
        },
        {
          "level": 3,
          "title": "2.4 小结",
          "slug": "_2-4-小结"
        },
        {
          "level": 2,
          "title": "3. 数据卷",
          "slug": "_3-数据卷"
        },
        {
          "level": 3,
          "title": "3.1 什么是数据卷",
          "slug": "_3-1-什么是数据卷"
        },
        {
          "level": 3,
          "title": "3.2 数据集操作命令",
          "slug": "_3-2-数据集操作命令"
        },
        {
          "level": 3,
          "title": "3.3 创建和查看数据卷",
          "slug": "_3-3-创建和查看数据卷"
        },
        {
          "level": 3,
          "title": "3.4 挂载数据卷",
          "slug": "_3-4-挂载数据卷"
        },
        {
          "level": 3,
          "title": "3.5 案例-给Nginx挂载数据卷",
          "slug": "_3-5-案例-给nginx挂载数据卷"
        },
        {
          "level": 3,
          "title": "3.6 案例-给MySQL挂载本地目录",
          "slug": "_3-6-案例-给mysql挂载本地目录"
        },
        {
          "level": 3,
          "title": "3.7 小结",
          "slug": "_3-7-小结"
        }
      ],
      "size": "6.10kb"
    },
    {
      "title": "RabbitMQ-快速入门",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/11-RabbitMQ-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",
      "relativePath": "handbook/Learn/Microservice/11-RabbitMQ-快速入门.md",
      "key": "v-494c6c33",
      "path": "/handbook/Learn/Microservice/11-RabbitMQ-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",
      "headers": [
        {
          "level": 2,
          "title": "1. 初识MQ",
          "slug": "_1-初识mq"
        },
        {
          "level": 3,
          "title": "1.1 同步和异步通讯",
          "slug": "_1-1-同步和异步通讯"
        },
        {
          "level": 3,
          "title": "1.2 技术对比",
          "slug": "_1-2-技术对比"
        },
        {
          "level": 2,
          "title": "2. 安装RabbitMQ",
          "slug": "_2-安装rabbitmq"
        },
        {
          "level": 3,
          "title": "2.1 RabbitMQ消息模型",
          "slug": "_2-1-rabbitmq消息模型"
        },
        {
          "level": 2,
          "title": "3. 入门案例",
          "slug": "_3-入门案例"
        },
        {
          "level": 3,
          "title": "3.1 创建工程",
          "slug": "_3-1-创建工程"
        },
        {
          "level": 3,
          "title": "3.2 publisher实现",
          "slug": "_3-2-publisher实现"
        },
        {
          "level": 3,
          "title": "3.3 consumer实现",
          "slug": "_3-3-consumer实现"
        },
        {
          "level": 2,
          "title": "4. 总结",
          "slug": "_4-总结"
        }
      ],
      "size": "8.08kb"
    },
    {
      "title": "RabbitMQ-SpringAMQP",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/Microservice/12-RabbitMQ-SpringAMQP%20.html",
      "relativePath": "handbook/Learn/Microservice/12-RabbitMQ-SpringAMQP .md",
      "key": "v-b4bbba0e",
      "path": "/handbook/Learn/Microservice/12-RabbitMQ-SpringAMQP%20.html",
      "headers": [
        {
          "level": 2,
          "title": "1. Basic Queue 简单队列模型",
          "slug": "_1-basic-queue-简单队列模型"
        },
        {
          "level": 3,
          "title": "1.1 消息发送",
          "slug": "_1-1-消息发送"
        },
        {
          "level": 3,
          "title": "1.2 消息接收",
          "slug": "_1-2-消息接收"
        },
        {
          "level": 3,
          "title": "1.3 测试",
          "slug": "_1-3-测试"
        },
        {
          "level": 2,
          "title": "2. WorkQueue",
          "slug": "_2-workqueue"
        },
        {
          "level": 3,
          "title": "2.1 消息发送",
          "slug": "_2-1-消息发送"
        },
        {
          "level": 3,
          "title": "2.2 消息接收",
          "slug": "_2-2-消息接收"
        },
        {
          "level": 3,
          "title": "2.3 测试",
          "slug": "_2-3-测试"
        },
        {
          "level": 3,
          "title": "2.4 能者多劳",
          "slug": "_2-4-能者多劳"
        },
        {
          "level": 3,
          "title": "2.5 总结",
          "slug": "_2-5-总结"
        },
        {
          "level": 2,
          "title": "3. 发布/订阅",
          "slug": "_3-发布-订阅"
        },
        {
          "level": 2,
          "title": "4. Fanout",
          "slug": "_4-fanout"
        },
        {
          "level": 3,
          "title": "4.1 声明队列和交换机",
          "slug": "_4-1-声明队列和交换机"
        },
        {
          "level": 3,
          "title": "4.2 消息发送",
          "slug": "_4-2-消息发送"
        },
        {
          "level": 3,
          "title": "3.4.3.消息接收",
          "slug": "_3-4-3-消息接收"
        },
        {
          "level": 3,
          "title": "3.4.4.总结",
          "slug": "_3-4-4-总结"
        },
        {
          "level": 2,
          "title": "5. Direct",
          "slug": "_5-direct"
        },
        {
          "level": 3,
          "title": "5.1 基于注解声明队列和交换机",
          "slug": "_5-1-基于注解声明队列和交换机"
        },
        {
          "level": 3,
          "title": "5.2 消息发送",
          "slug": "_5-2-消息发送"
        },
        {
          "level": 3,
          "title": "5.3 总结",
          "slug": "_5-3-总结"
        },
        {
          "level": 2,
          "title": "6. Topic",
          "slug": "_6-topic"
        },
        {
          "level": 3,
          "title": "6.1 说明",
          "slug": "_6-1-说明"
        },
        {
          "level": 3,
          "title": "6.2 消息发送",
          "slug": "_6-2-消息发送"
        },
        {
          "level": 3,
          "title": "6.3 消息接收",
          "slug": "_6-3-消息接收"
        },
        {
          "level": 3,
          "title": "6.4 总结",
          "slug": "_6-4-总结"
        },
        {
          "level": 2,
          "title": "7. 消息转换器",
          "slug": "_7-消息转换器"
        },
        {
          "level": 3,
          "title": "7.1 测试默认转换器",
          "slug": "_7-1-测试默认转换器"
        },
        {
          "level": 3,
          "title": "7.2  测试JSON转换器",
          "slug": "_7-2-测试json转换器"
        }
      ],
      "size": "11.47kb"
    },
    {
      "title": "personnel",
      "frontmatter": {},
      "regularPath": "/handbook/Interview/00-personnel.html",
      "relativePath": "handbook/Interview/00-personnel.md",
      "key": "v-61324a89",
      "path": "/handbook/Interview/00-personnel.html",
      "headers": [
        {
          "level": 3,
          "title": "你觉得你个性上最大的优点是什么",
          "slug": "你觉得你个性上最大的优点是什么"
        },
        {
          "level": 3,
          "title": "说说你最大的缺点",
          "slug": "说说你最大的缺点"
        },
        {
          "level": 3,
          "title": "你对加班的看法",
          "slug": "你对加班的看法"
        },
        {
          "level": 3,
          "title": "你对薪资的要求",
          "slug": "你对薪资的要求"
        },
        {
          "level": 3,
          "title": "在五年的时间内，你的职业规划",
          "slug": "在五年的时间内-你的职业规划"
        }
      ],
      "size": "0.94kb"
    },
    {
      "title": "一个程序猿的日记本",
      "frontmatter": {},
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-4c3d68a8",
      "path": "/",
      "size": "0.43kb"
    },
    {
      "title": "RabbitMQ-死信队列",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/10.RabbitMQ-%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97.html",
      "relativePath": "handbook/Learn/RabbitMQ/10.RabbitMQ-死信队列.md",
      "key": "v-725d015a",
      "path": "/handbook/Learn/RabbitMQ/10.RabbitMQ-%E6%AD%BB%E4%BF%A1%E9%98%9F%E5%88%97.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-死信队列",
          "slug": "rabbitmq-死信队列"
        },
        {
          "level": 3,
          "title": "1. 死信的概念",
          "slug": "_1-死信的概念"
        },
        {
          "level": 3,
          "title": "2. 死信的来源",
          "slug": "_2-死信的来源"
        },
        {
          "level": 3,
          "title": "3. 死信实战",
          "slug": "_3-死信实战"
        }
      ],
      "size": "11.10kb"
    },
    {
      "title": "RabbitMQ-延迟队列",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/11.RabbitMQ-%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html",
      "relativePath": "handbook/Learn/RabbitMQ/11.RabbitMQ-延迟队列.md",
      "key": "v-f9aae1fa",
      "path": "/handbook/Learn/RabbitMQ/11.RabbitMQ-%E5%BB%B6%E8%BF%9F%E9%98%9F%E5%88%97.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-延迟队列",
          "slug": "rabbitmq-延迟队列"
        },
        {
          "level": 3,
          "title": "1. 延迟队列的概念",
          "slug": "_1-延迟队列的概念"
        },
        {
          "level": 3,
          "title": "2. 延迟队列使用场景",
          "slug": "_2-延迟队列使用场景"
        },
        {
          "level": 3,
          "title": "3. RabbitMQ 中的 TTL",
          "slug": "_3-rabbitmq-中的-ttl"
        },
        {
          "level": 3,
          "title": "4. 整合SpringBoot",
          "slug": "_4-整合springboot"
        },
        {
          "level": 3,
          "title": "5. 队列TTL",
          "slug": "_5-队列ttl"
        },
        {
          "level": 3,
          "title": "6. 延时队列优化",
          "slug": "_6-延时队列优化"
        },
        {
          "level": 3,
          "title": "7. Rabbitmq 插件实现延迟队列",
          "slug": "_7-rabbitmq-插件实现延迟队列"
        },
        {
          "level": 3,
          "title": "8. 总结",
          "slug": "_8-总结"
        }
      ],
      "size": "19.87kb"
    },
    {
      "title": "RabbitMQ-生产者和消费者",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/2.RabbitMQ-%E7%94%9F%E4%BA%A7%E8%80%85%E5%92%8C%E6%B6%88%E8%B4%B9%E8%80%85.html",
      "relativePath": "handbook/Learn/RabbitMQ/2.RabbitMQ-生产者和消费者.md",
      "key": "v-4163f415",
      "path": "/handbook/Learn/RabbitMQ/2.RabbitMQ-%E7%94%9F%E4%BA%A7%E8%80%85%E5%92%8C%E6%B6%88%E8%B4%B9%E8%80%85.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-生产者和消费者",
          "slug": "rabbitmq-生产者和消费者"
        },
        {
          "level": 3,
          "title": "第一步：添加依赖，代码如下：",
          "slug": "第一步-添加依赖-代码如下"
        },
        {
          "level": 3,
          "title": "第二步：编写消息生产者，代码如下：",
          "slug": "第二步-编写消息生产者-代码如下"
        },
        {
          "level": 3,
          "title": "第三步：编写消息消费者，代码如下：",
          "slug": "第三步-编写消息消费者-代码如下"
        }
      ],
      "size": "3.88kb"
    },
    {
      "title": "RabbitMQ-轮询分发消息.md",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/4.RabbitMQ-%E8%BD%AE%E8%AF%A2%E5%88%86%E5%8F%91%E6%B6%88%E6%81%AF.html",
      "relativePath": "handbook/Learn/RabbitMQ/4.RabbitMQ-轮询分发消息.md",
      "key": "v-619ea9e8",
      "path": "/handbook/Learn/RabbitMQ/4.RabbitMQ-%E8%BD%AE%E8%AF%A2%E5%88%86%E5%8F%91%E6%B6%88%E6%81%AF.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-轮询分发消息.md",
          "slug": "rabbitmq-轮询分发消息-md"
        },
        {
          "level": 3,
          "title": "发送线程（控制台输入）",
          "slug": "发送线程-控制台输入"
        },
        {
          "level": 3,
          "title": "消费线程（启动两个）",
          "slug": "消费线程-启动两个"
        },
        {
          "level": 3,
          "title": "结果",
          "slug": "结果"
        },
        {
          "level": 3,
          "title": "注意",
          "slug": "注意"
        }
      ],
      "size": "3.35kb"
    },
    {
      "title": "RabbitMQ-持久化",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/6.RabbitMQ-%E6%8C%81%E4%B9%85%E5%8C%96.html",
      "relativePath": "handbook/Learn/RabbitMQ/6.RabbitMQ-持久化.md",
      "key": "v-49926896",
      "path": "/handbook/Learn/RabbitMQ/6.RabbitMQ-%E6%8C%81%E4%B9%85%E5%8C%96.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-持久化",
          "slug": "rabbitmq-持久化"
        },
        {
          "level": 3,
          "title": "1. 概念",
          "slug": "_1-概念"
        },
        {
          "level": 3,
          "title": "2. 队列如何实现持久化",
          "slug": "_2-队列如何实现持久化"
        },
        {
          "level": 3,
          "title": "3. 消息持久化",
          "slug": "_3-消息持久化"
        }
      ],
      "size": "0.97kb"
    },
    {
      "title": "RabbitMQ-简介及安装",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/1.RabbitMQ-%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85.html",
      "relativePath": "handbook/Learn/RabbitMQ/1.RabbitMQ-简介及安装.md",
      "key": "v-aca542b6",
      "path": "/handbook/Learn/RabbitMQ/1.RabbitMQ-%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-简介及安装",
          "slug": "rabbitmq-简介及安装"
        },
        {
          "level": 3,
          "title": "1. 简介",
          "slug": "_1-简介"
        },
        {
          "level": 3,
          "title": "2.安装",
          "slug": "_2-安装"
        }
      ],
      "size": "1.70kb"
    },
    {
      "title": "RabbitMQ-抽取工具类",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/3.RabbitMQ-%E6%8A%BD%E5%8F%96%E5%B7%A5%E5%85%B7%E7%B1%BB.html",
      "relativePath": "handbook/Learn/RabbitMQ/3.RabbitMQ-抽取工具类.md",
      "key": "v-65943da8",
      "path": "/handbook/Learn/RabbitMQ/3.RabbitMQ-%E6%8A%BD%E5%8F%96%E5%B7%A5%E5%85%B7%E7%B1%BB.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-抽取工具类",
          "slug": "rabbitmq-抽取工具类"
        },
        {
          "level": 3,
          "title": "工具类",
          "slug": "工具类"
        },
        {
          "level": 3,
          "title": "通过工具类 生产消息",
          "slug": "通过工具类-生产消息"
        },
        {
          "level": 3,
          "title": "通过工具类 消费消息",
          "slug": "通过工具类-消费消息"
        }
      ],
      "size": "3.01kb"
    },
    {
      "title": "RabbitMQ-不公平分发&预取值",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/7.RabbitMQ-%E4%B8%8D%E5%85%AC%E5%B9%B3%E5%88%86%E5%8F%91&%E9%A2%84%E5%8F%96%E5%80%BC.html",
      "relativePath": "handbook/Learn/RabbitMQ/7.RabbitMQ-不公平分发&预取值.md",
      "key": "v-3c70e1b4",
      "path": "/handbook/Learn/RabbitMQ/7.RabbitMQ-%E4%B8%8D%E5%85%AC%E5%B9%B3%E5%88%86%E5%8F%91&%E9%A2%84%E5%8F%96%E5%80%BC.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-不公平分发&预取值",
          "slug": "rabbitmq-不公平分发-预取值"
        },
        {
          "level": 3,
          "title": "1. 不公平分发",
          "slug": "_1-不公平分发"
        },
        {
          "level": 3,
          "title": "2. 预取值",
          "slug": "_2-预取值"
        }
      ],
      "size": "1.55kb"
    },
    {
      "title": "RabbitMQ-消息应答",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/5.RabbitMQ-%E6%B6%88%E6%81%AF%E5%BA%94%E7%AD%94.html",
      "relativePath": "handbook/Learn/RabbitMQ/5.RabbitMQ-消息应答.md",
      "key": "v-3fa85405",
      "path": "/handbook/Learn/RabbitMQ/5.RabbitMQ-%E6%B6%88%E6%81%AF%E5%BA%94%E7%AD%94.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-消息应答",
          "slug": "rabbitmq-消息应答"
        },
        {
          "level": 3,
          "title": "1. 概念",
          "slug": "_1-概念"
        },
        {
          "level": 3,
          "title": "2. 自动应答",
          "slug": "_2-自动应答"
        },
        {
          "level": 3,
          "title": "3. 消息应答的方法",
          "slug": "_3-消息应答的方法"
        },
        {
          "level": 3,
          "title": "4. Multiple 的解释",
          "slug": "_4-multiple-的解释"
        },
        {
          "level": 3,
          "title": "5. 消息自动重新入队",
          "slug": "_5-消息自动重新入队"
        },
        {
          "level": 3,
          "title": "6. 消息手动应答代码",
          "slug": "_6-消息手动应答代码"
        },
        {
          "level": 3,
          "title": "7. 结果",
          "slug": "_7-结果"
        }
      ],
      "size": "5.46kb"
    },
    {
      "title": "RabbitMQ-发布确认",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/8.RabbitMQ-%E5%8F%91%E5%B8%83%E7%A1%AE%E8%AE%A4.html",
      "relativePath": "handbook/Learn/RabbitMQ/8.RabbitMQ-发布确认.md",
      "key": "v-773f1fcd",
      "path": "/handbook/Learn/RabbitMQ/8.RabbitMQ-%E5%8F%91%E5%B8%83%E7%A1%AE%E8%AE%A4.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-发布确认",
          "slug": "rabbitmq-发布确认"
        },
        {
          "level": 3,
          "title": "1. 发布确认原理",
          "slug": "_1-发布确认原理"
        },
        {
          "level": 3,
          "title": "2. 发布确认的策略",
          "slug": "_2-发布确认的策略"
        }
      ],
      "size": "7.16kb"
    },
    {
      "title": "RabbitMQ-交换机",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/RabbitMQ/9.RabbitMQ-%E4%BA%A4%E6%8D%A2%E6%9C%BA.html",
      "relativePath": "handbook/Learn/RabbitMQ/9.RabbitMQ-交换机.md",
      "key": "v-616ac86c",
      "path": "/handbook/Learn/RabbitMQ/9.RabbitMQ-%E4%BA%A4%E6%8D%A2%E6%9C%BA.html",
      "headers": [
        {
          "level": 2,
          "title": "RabbitMQ-交换机",
          "slug": "rabbitmq-交换机"
        },
        {
          "level": 3,
          "title": "1.Exchanges",
          "slug": "_1-exchanges"
        },
        {
          "level": 3,
          "title": "2. 临时队列",
          "slug": "_2-临时队列"
        },
        {
          "level": 3,
          "title": "3. 绑定(bindings)",
          "slug": "_3-绑定-bindings"
        },
        {
          "level": 3,
          "title": "4. Fanout",
          "slug": "_4-fanout"
        },
        {
          "level": 3,
          "title": "5. Direct exchange",
          "slug": "_5-direct-exchange"
        },
        {
          "level": 3,
          "title": "6. Topics",
          "slug": "_6-topics"
        }
      ],
      "size": "15.07kb"
    },
    {
      "title": "SQL案例",
      "frontmatter": {},
      "regularPath": "/handbook/Learn/SQL/SQL%E6%A1%88%E4%BE%8B.html",
      "relativePath": "handbook/Learn/SQL/SQL案例.md",
      "key": "v-610e6414",
      "path": "/handbook/Learn/SQL/SQL%E6%A1%88%E4%BE%8B.html",
      "headers": [
        {
          "level": 2,
          "title": "Mysql",
          "slug": "mysql"
        },
        {
          "level": 3,
          "title": "1.基础语法 - 查询 - 全表查询",
          "slug": "_1-基础语法-查询-全表查询"
        },
        {
          "level": 3,
          "title": "2.基础语法 - 查询 - 选择查询",
          "slug": "_2-基础语法-查询-选择查询"
        },
        {
          "level": 3,
          "title": "3.基础语法 - 查询 - 别名",
          "slug": "_3-基础语法-查询-别名"
        },
        {
          "level": 3,
          "title": "4.基础语法 - 查询 - 常量和运算",
          "slug": "_4-基础语法-查询-常量和运算"
        },
        {
          "level": 3,
          "title": "5、基础语法 - 条件查询 - where",
          "slug": "_5、基础语法-条件查询-where"
        },
        {
          "level": 3,
          "title": "6、基础语法 - 条件查询 - 运算符",
          "slug": "_6、基础语法-条件查询-运算符"
        },
        {
          "level": 3,
          "title": "7. 基于语法-条件查询-空值✔",
          "slug": "_7-基于语法-条件查询-空值✔"
        },
        {
          "level": 3,
          "title": "8、基础语法-条件查询-模糊查询✔",
          "slug": "_8、基础语法-条件查询-模糊查询✔"
        },
        {
          "level": 3,
          "title": "9、基础语法-条件查询-逻辑运算",
          "slug": "_9、基础语法-条件查询-逻辑运算"
        },
        {
          "level": 3,
          "title": "10、基础语法-去重",
          "slug": "_10、基础语法-去重"
        },
        {
          "level": 3,
          "title": "11.基础语法-排序✔",
          "slug": "_11-基础语法-排序✔"
        },
        {
          "level": 3,
          "title": "12.基础语法 - 截断和偏移✔",
          "slug": "_12-基础语法-截断和偏移✔"
        },
        {
          "level": 3,
          "title": "13.基础语法-条件分支✔",
          "slug": "_13-基础语法-条件分支✔"
        },
        {
          "level": 3,
          "title": "14. 函数-时间函数✔",
          "slug": "_14-函数-时间函数✔"
        },
        {
          "level": 3,
          "title": "15. 函数-字符串处理✔",
          "slug": "_15-函数-字符串处理✔"
        },
        {
          "level": 3,
          "title": "16. 函数-聚合函数",
          "slug": "_16-函数-聚合函数"
        },
        {
          "level": 3,
          "title": "17. 分组聚合-单字段分组",
          "slug": "_17-分组聚合-单字段分组"
        },
        {
          "level": 3,
          "title": "18.分组聚合-多字段分组✔",
          "slug": "_18-分组聚合-多字段分组✔"
        },
        {
          "level": 3,
          "title": "19.分组聚合 - having 子句",
          "slug": "_19-分组聚合-having-子句"
        },
        {
          "level": 3,
          "title": "20.查询进阶 - 关联查询 - cross join✔",
          "slug": "_20-查询进阶-关联查询-cross-join✔"
        },
        {
          "level": 3,
          "title": "21.查询进阶-关联查询-inner join",
          "slug": "_21-查询进阶-关联查询-inner-join"
        },
        {
          "level": 3,
          "title": "22.查询进阶 - 关联查询 - outer join✔",
          "slug": "_22-查询进阶-关联查询-outer-join✔"
        },
        {
          "level": 3,
          "title": "23.查询进阶 - 子查询✔",
          "slug": "_23-查询进阶-子查询✔"
        },
        {
          "level": 3,
          "title": "24.查询进阶 - 子查询 - exists ✔",
          "slug": "_24-查询进阶-子查询-exists-✔"
        },
        {
          "level": 3,
          "title": "25.查询进阶 - 组合查询✔",
          "slug": "_25-查询进阶-组合查询✔"
        },
        {
          "level": 3,
          "title": "26.查询进阶 - 开窗函数 - sum over✔",
          "slug": "_26-查询进阶-开窗函数-sum-over✔"
        },
        {
          "level": 3,
          "title": "27.查询进阶 - 开窗函数 - sum over order by✔",
          "slug": "_27-查询进阶-开窗函数-sum-over-order-by✔"
        },
        {
          "level": 3,
          "title": "28.查询进阶 - 开窗函数 - rank✔",
          "slug": "_28-查询进阶-开窗函数-rank✔"
        },
        {
          "level": 3,
          "title": "29.查询进阶 - 开窗函数-row_number✔",
          "slug": "_29-查询进阶-开窗函数-row-number✔"
        },
        {
          "level": 3,
          "title": "30.查询进阶 - 开窗函数 - lag / lead✔",
          "slug": "_30-查询进阶-开窗函数-lag-lead✔"
        },
        {
          "level": 3,
          "title": "31.补充题目",
          "slug": "_31-补充题目"
        }
      ],
      "size": "16.83kb"
    }
  ],
  "themeConfig": {
    "sidebarDepth": 4,
    "subSidebar": true,
    "nav": [
      {
        "text": "Index",
        "link": "/"
      },
      {
        "text": "Learn",
        "items": [
          {
            "text": "RabbitMQ",
            "link": "/handbook/Learn/RabbitMQ/1.RabbitMQ-简介及安装"
          },
          {
            "text": "SQL",
            "link": "/handbook/Learn/SQL/SQL案例"
          }
        ]
      },
      {
        "text": "Project",
        "items": [
          {
            "text": "社区精品汇",
            "link": "/handbook/Learn/RabbitMQ/1.RabbitMQ-简介及安装"
          }
        ]
      },
      {
        "text": "Interview",
        "items": [
          {
            "text": "personnel",
            "link": "/handbook/Interview/00-personnel"
          },
          {
            "text": "Java基础",
            "link": "/handbook/Interview/01-Java基础"
          },
          {
            "text": "Redis",
            "link": "/handbook/Interview/02-Redis"
          },
          {
            "text": "MySQL",
            "link": "/handbook/Interview/03-MySQL"
          },
          {
            "text": "Java框架",
            "link": "/handbook/Interview/04-Java框架"
          },
          {
            "text": "微服务",
            "link": "/handbook/Interview/05-微服务"
          },
          {
            "text": "消息中间件",
            "link": "/handbook/Interview/06-消息中间件"
          },
          {
            "text": "Java集合",
            "link": "/handbook/Interview/07-Java集合"
          },
          {
            "text": "Java并发",
            "link": "/handbook/Interview/08-Java并发"
          },
          {
            "text": "JVM",
            "link": "/handbook/Interview/09-JVM"
          },
          {
            "text": "Linux",
            "link": "/handbook/Interview/10-Linux"
          },
          {
            "text": "Hadoop",
            "link": "/handbook/Interview/11-Hadoop.md"
          },
          {
            "text": "Hive",
            "link": "/handbook/Interview/12-Hive.md"
          }
        ]
      },
      {
        "text": "lxy25122-blog",
        "items": [
          {
            "text": "Github",
            "link": "https://github.com/lxy25122"
          },
          {
            "text": "Gitee",
            "link": "https://gitee.com/tjlxy"
          }
        ]
      }
    ],
    "sidebar": [
      {
        "title": "学前必读",
        "path": "/",
        "collapsable": false
      },
      {
        "title": "Learn",
        "collapsable": true,
        "children": [
          {
            "title": "RabbitMQ",
            "collapsable": true,
            "children": [
              {
                "title": "简介及安装",
                "path": "/handbook/Learn/RabbitMQ/1.RabbitMQ-简介及安装"
              },
              {
                "title": "生产者和消费者",
                "path": "/handbook/Learn/RabbitMQ/2.RabbitMQ-生产者和消费者"
              },
              {
                "title": "抽取工具类",
                "path": "/handbook/Learn/RabbitMQ/3.RabbitMQ-抽取工具类"
              },
              {
                "title": "轮询分发消息",
                "path": "/handbook/Learn/RabbitMQ/4.RabbitMQ-轮询分发消息"
              },
              {
                "title": "消息应答",
                "path": "/handbook/Learn/RabbitMQ/5.RabbitMQ-消息应答"
              },
              {
                "title": "持久化",
                "path": "/handbook/Learn/RabbitMQ/6.RabbitMQ-持久化"
              },
              {
                "title": "不公平分发&预取值",
                "path": "/handbook/Learn/RabbitMQ/7.RabbitMQ-不公平分发&预取值"
              },
              {
                "title": "发布确认",
                "path": "/handbook/Learn/RabbitMQ/8.RabbitMQ-发布确认"
              },
              {
                "title": "交换机",
                "path": "/handbook/Learn/RabbitMQ/9.RabbitMQ-交换机"
              },
              {
                "title": "死信队列",
                "path": "/handbook/Learn/RabbitMQ/10.RabbitMQ-死信队列"
              },
              {
                "title": "延迟队列",
                "path": "/handbook/Learn/RabbitMQ/11.RabbitMQ-延迟队列"
              }
            ]
          },
          {
            "title": "SQL",
            "collapsable": true,
            "children": [
              {
                "title": "SQL练习",
                "path": "/handbook/Learn/SQL/SQL案例"
              }
            ]
          }
        ]
      },
      {
        "title": "Project",
        "children": [
          {
            "title": "社区精品汇",
            "collapsable": true,
            "children": [
              {
                "title": "项目概述",
                "path": "/handbook/Learn/RabbitMQ/1.RabbitMQ-简介及安装"
              }
            ]
          }
        ]
      },
      {
        "title": "Interview",
        "children": [
          {
            "title": "personnel",
            "collapsable": true,
            "path": "/handbook/Interview/00-personnel"
          },
          {
            "title": "Java基础",
            "collapsable": true,
            "path": "/handbook/Interview/01-Java基础"
          },
          {
            "title": "Redis",
            "path": "/handbook/Interview/02-Redis"
          },
          {
            "title": "MySQL",
            "path": "/handbook/Interview/03-MySQL"
          },
          {
            "title": "Java框架",
            "path": "/handbook/Interview/04-Java框架"
          },
          {
            "title": "微服务",
            "path": "/handbook/Interview/05-微服务"
          },
          {
            "title": "消息中间件",
            "path": "/handbook/Interview/06-消息中间件"
          },
          {
            "title": "Java集合",
            "path": "/handbook/Interview/07-Java集合"
          },
          {
            "title": "Java并发",
            "path": "/handbook/Interview/08-Java并发"
          },
          {
            "title": "JVM",
            "path": "/handbook/Interview/09-JVM"
          },
          {
            "title": "Linux",
            "path": "/handbook/Interview/10-Linux"
          },
          {
            "title": "Hadoop",
            "path": "/handbook/Interview/11-Hadoop"
          },
          {
            "title": "Hive",
            "path": "/handbook/Interview/12-Hive"
          }
        ]
      }
    ],
    "yilia_plus": {
      "github": {
        "url": "https://github.com/25122lxy/"
      },
      "footer": {
        "since": 2023,
        "author": "<a href=\"https://github.com/25122lxy/\" target=\"_blank\">lxy25122</a>",
        "busuanzi": {
          "enable": false
        }
      }
    }
  },
  "locales": {
    "/": {
      "lang": "zh-CN",
      "path": "/"
    }
  }
}